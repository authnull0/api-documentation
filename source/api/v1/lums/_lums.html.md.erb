# Endpoint User Management
The Endpoint User Management manages endpoint users creation, creates credentials based on credential type and assigns them to wallets. The users are also imported from the Authnull Agent running per instance, and are assigned to wallets. All the synchronization happens with the Authnull Agent for endpoint users 


## Add User
The Add User API allows users to add a new user to the system or application for endpoint user management. This API provides a simple and secure way to manage user accounts and ensure that only authorized users have access to sensitive information or resources.

```shell
curl --location 'https://api.authnull.kloudlearn.com/api/v1/add-linux-user-info' \
--header 'Content-Type: application/json' \
--data '{
    "userName":"sefali",
    "authMethod":"su",
    "userType":"3",
    "customMapping":"4"
}'
```

```http
POST /api/v1/add-linux-user-info HTTP/1.1
```



```json
[
{
    "userName":"sefali",
    "authMethod":"s",
    "userType":"6",
    "customMapping":"6"
   
}
]
```

This will add the users to an Endpoint.


### Access Token
Authorization Key Required 

### HTTP Request

`POST /api/v1/add-linux-user-info HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
userName | an identification used by a person with access to a computer, network, or online service.
authMethod | Authentication is the process of determining whether someone or something is, in fact, who or what it says it is..
userType | Roles is the user is admin or user it signify.
customMapping | It expresses ideas, thoughts and relationships among and between different spatial elements in multiple dimensions..

### HTTP response

`successfully Added`


<aside class="success">
successfully Added
</aside>
 
## List User
The List User API allows users to retrieve a list of all the users in the system or application for endpoint user management.The API may return a list of user details and any relevant permissions or access rights.

```shell
curl --location 'http://localhost:9090/api/v1/lums/listAllEpmUsers' \
--header 'Content-Type: application/json' \
--data '{
    "domainId":1,
    "pageId": 1,
    "pageSize": 200,
    "filter": "",
    "instanceIds": [2, 1]
}'
```

```http
POST /api/v1/lums/listAllEpmUsers HTTP/1.1
```




```json
{
    "domainId":1,
    "pageId":1,
    "pageSize":10,
    "filter":"",
    "instanceIds":[17]

}
```


### Access Token
Authorization Key Required 

### HTTP Request

`POST /api/v1/lums/listAllEpmUsers HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
pageId | Page ID refers to the page number.
pageSize | Page size refers to the number of endpoints groups to be fetched.
domainId |  Domain Id is the company/organization id within our Authnull platform.
instanceId | The instanceId is used to specify the ID of the instances that are part of the endpoint.
filter | filter is the search keyword for searching endpoint groups.

### HTTP response

`successfully shown list of all endpoint user`


<aside class="success">
successfully shown list of all endpoint user
</aside>
 
## Add Endpoint User Info
The Add Endpoint User Info API allows users to add endpoint-specific information to a user account in the system or application for endpoint user management. This API provides a simple and efficient way to manage user accounts and ensure that endpoint-specific information is associated with each user.

```shell
curl --location 'https://api.authnull.kloudlearn.com/api/v1/lums/addEpmUserInfo' \
--header 'Content-Type: application/json' \
--data '{
"domainId":4,
"userName":"as",
"userType":"12",
"credType":"asd",
"password":"XXXX",
"motp":"",
"did":"",
"privilegedUser":"",
"sshKey":"asdfg"
}'
```

```http
POST /api/v1/lums/addEpmUserInfo HTTP/1.1
```



```json
{
"domainId":1,
"userType":"Local",
"credType":"password",
"password":"",
"privilegedUser":"true",
"userName":"testManjuupdate",
"sshKey":"",
"motp":"",
"did":""
}
```


### Access Token
Authorization Key Required 

### HTTP Request

`POST /api/v1/lums/addEpmUserInfo HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
domainId |  Domain Id is the company/organization id within our Authnull platform.
userType | Roles is the user is admin or user it signify.
credType | The credType specifies the type of credential used for authentication or authorization purposes.
password | The password refers to the authentication credential used to verify the identity of the user making the request.
privilegedUser |The privilegedUser allows certain users to have elevated access and permissions within the endpoint.
userName | an identification used by a person with access to a computer, network, or online service.
sshKey | The sshKey allows for secure access to an endpoint using a pre-shared cryptographic key.
motp | MOTP parameter is used for Multi-One Time Password authentication on API endpoints to ensure secure access and prevent unauthorized usage.
did | The did specifies the unique decentralized identifier associated with a decentralized identity, allowing for authentication and authorization of data exchange and access within a decentralized identity ecosystem.


### HTTP response

```json
{
    "status": "Success",
    "message": "User Added successfully",
    "userId": "71"
}
```

`User Added successfully`

<aside class="success">
User Added successfully
</aside>

## Get Endpoint User detail
The Get Endpoint User Detail API is a part of the User Management endpoint and is used to retrieve detailed information about a specific user. This API endpoint requires the user unique identifier as input and returns information and any associated metadata. It is useful for retrieving specific user information to display or manipulate within an application.

```shell
curl --location 'https://api.authnull.kloudlearn.com/api/v1/lums/epmUserDetail' \
--header 'Content-Type: application/json' \
--data '{
    "domainId":1,
    "userId":25
}'
```

```http
POST /api/v1/lums/getEpmUserDetail
```



```json
{
"userId":26,
"domainId":1
}
```




### Access Token
Authorization Key Required 

### HTTP Request

`POST /api/v1/lums/getEpmUserDetail HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
domainId |  Domain Id is the company/organization id within our Authnull platform.
userIds |The userId is used to specify the unique identifier of a user to be added or removed from an endpoint.

### HTTP response

```json
{
"domainId":1,
"userId":26,
"userType":"Local",
"credType":"password",
"password":"xxxx",
"privilegedUser":"true",
"userName":"testManjuupdate",
"sshKey":"",
"motp":"",
"did":""
}
```

`Epm User Detail Fetched`

<aside class="success">
Epm User Detail Fetched
</aside>


## Update Endpoint User Info
The Update Endpoint User Info API is a part of the User Management endpoint and is used to update a user information. This API endpoint requires the user unique identifier and the updated information as input. Upon successful execution, the API returns a success message indicating that the user information has been updated. 


```shell
curl --location --request PUT 'https://api.authnull.kloudlearn.com/api/v1/lums/updateEpmUserInfo' \
--header 'Content-Type: application/json' \
--data '{
"userId":26,
"domainId":1,
"userType":"Local",
"credType":"password",
"password":"xxxx",
"privilegedUser":"true",
"userName":"testManjuupdate",
"sshKey":"",
"motp":"",
"did":""
}'
```

```http
PUT /api/v1/lums/updateEpmUserInfo HTTP/1.1
```



```json
{
"userId":26,
"domainId":1,
"userType":"Local",
"credType":"password",
"password":"xxxx",
"privilegedUser":"true",
"userName":"testManjuupdate",
"sshKey":"",
"motp":"",
"did":""
}
```



### Access Token
Authorization Key Required 

### HTTP Request

`PUT /api/v1/lums/updateEpmUserInfo HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
userId |The userId is used to specify the unique identifier of a user to be added or removed from an endpoint.
domainId |  Domain Id is the company/organization id within our Authnull platform.
userType | Roles is the user is admin or user it signify.
credType |The credType specifies the type of credential used for authentication or authorization purposes.
passord |The password refers to the authentication credential used to verify the identity of the user making the request.
privilegedUser | The privilegedUser allows certain users to have elevated access and permissions within the endpoint
userName | an identification used by a person with access to a computer, network, or online service.
sshKey |The sshKey allows for secure access to an endpoint using a pre-shared cryptographic key.
motp | MOTP parameter is used for Multi-One Time Password authentication on API endpoints to ensure secure access and prevent unauthorized usage.
did |The did specifies the unique decentralized identifier associated with a decentralized identity, allowing for authentication and authorization of data exchange and access within a decentralized identity ecosystem.


### HTTP response

```json
{
    "status": "Success",
    "message": "User Updated successfully",
    "userId": "26"
}
```

`EPM User Info updated`

<aside class="success">
EPM User Info updated
</aside>




## Delete Endpoint User
The Delete Endpoint User API is a part of the User Management endpoint and is used to delete a user account. This API endpoint requires the user unique identifier as input, and upon successful execution, the user account is removed from the system. This API is useful for administrative purposes, such as removing inactive or unauthorized user accounts.

```shell
curl --location --request DELETE 'https://api.authnull.kloudlearn.com/api/v1/lums/deleteEpmUser' \
--header 'Content-Type: application/json' \
--data '[
{
    "linuxUserId": "1",
    
}
]'
```

```http
DELETE api/v1/lums/deleteEpmUser HTTP/1.1
```



```json
{
"epmUserId":899,
"domainId":1,
"userName":"messagebus",
"instanceIds":[2]

}
```



### Access Token
Authorization Key Required 

### HTTP Request

`DELETE api/v1/lums/deleteEpmUser HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
domainId |  Domain Id is the company/organization id within our Authnull platform.
epmUserId | The epmUserId is used to identify the unique user ID associated with a particular endpoint in order to perform user-specific operations.
userName | an identification used by a person with access to a computer, network, or online service.
instanceId | The instanceId is used to specify the ID of the instances that are part of the endpoint.



### HTTP response

```json
{
    "status": "Success",
    "message": "User deleted successfully",
    "userId": "25"
}
```

`Endpoint User deleted`

<aside class="success">
Endpoint User deleted
</aside>

## Password Policy
A proper password complexity policy would be: eight characters for the length of a password and at least three types of the following characters used: uppercase letters, lowercase letters, digits, and special characters. Add the following parameters and their values: minlen, dcredit, ucredit, lcredit, and ocredit.


## Add Password Policy 
The Add Password Policy API is a part of the Password Policy endpoint in User Management and is used to define the password requirements for user accounts. This API endpoint requires input such as password length, complexity rules, and expiration policies. Upon successful execution, the API returns a success message indicating that the password policy has been added. This API is useful for enforcing security standards for user passwords and reducing the risk of security breaches.

```shell
curl --location 'https://api.authnull.kloudlearn.com/api/v1/instances/addPasswordPolicy' \
--header 'Content-Type: application/json' \
--data '{
    "policyName":"PolicynonMachineTest",
    "templateName":"Template1",
    "minLen":"5",
    "maxLen":"10",
    "firstChar":"",
    "allowUpperLower":"",
    "allowSpecial":"yes",
    "allowNumeric":"yes"
}'
```

```http
POST /api/v1/instances/addPasswordPolicy HTTP/1.1
```



```json
{
    "policyName":"PolicynonMachineTest",
    "templateName":"Template1",
    "minLen":"5",
    "maxLen":"10",
    "firstChar":"",
    "allowUpperLower":"",
    "allowSpecial":"yes",
    "allowNumeric":"yes"
}
```


### Access Token
Authorization Key Required 

### HTTP Request

`POST /api/v1/instances/addPasswordPolicy HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
policyName | The policyName refers to the name of the policy that should be applied to the specified endpoint.
templateName | The templateName refers to the name of the password policy template that is being used to apply a set of rules and restrictions for creating and managing user passwords.
minLen | The minLen sets the minimum required length for a users password.
maxLen | The minLen sets the Maximum required length for a users password.
firstChar | The firstChar specifies whether the password requires the first character to be uppercase, lowercase, or a digit.
allowUpperLower | The allowUpperLower specifies whether the password policy allows the use of both uppercase and lowercase letters in passwords.
allowSpecial | The allowSpecial determines whether special characters are allowed in user passwords.
allowNumeric | The allowNumeric specifies whether or not numeric characters are allowed in user passwords.

### HTTP response

`successfully Added Password Policy`

```json
{
    "code": 200,
    "message": "Successfully Added Password Policy"
}
```

<aside class="success">
successfully Added Password Policy
</aside>

## Delete Password Policy
The Delete Password Policy API is a part of the Password Policy endpoint in User Management and is used to remove an existing password policy. This API endpoint requires the unique identifier of the policy to be deleted as input, and upon successful execution, the policy is removed from the system. This API is useful for administrative purposes, such as updating password policies or removing outdated policies. It is important to note that removing a password policy may affect the security of user accounts and should be done with caution.


```shell
curl --location --request DELETE 'https://api.authnull.kloudlearn.com/api/v1/instances/deletePasswordPolicy' \
--header 'Content-Type: application/json' \
--data '{
    "policyId":1
}'
```

```http
DELETE /api/v1/instances/deletePasswordPolicy HTTP/1.1
```



```json
[
  {
        "policyId":1
  
    }
]
```

### Access Token
Authorization Key Required 

### HTTP Request

`DELETE /api/v1/instances/deletePasswordPolicy HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
policyId | The policyId specifies the unique identifier of a password policy to be retrieved, updated, or deleted.


### HTTP response

`successfully deleted Password Policy`

```json
[
  {
    "policyName":"PolicynonMachineTest",
    "templateName":"Template1",
    "minLen":"5",
    "maxLen":"10",
    "firstChar":"",
    "allowUpperLower":"",
    "allowSpecial":"yes",
    "allowNumeric":"yes"
}
]

```

<aside class="success">
successfully deleted Password Policy
</aside>

## List All Password Policy
The List All Password Policy API is a part of the Password Policy endpoint in User Management and is used to retrieve a list of all existing password policies. This API endpoint returns a list of policies, each with its unique identifier and associated settings such as password length and complexity rules. This API is useful for administrative purposes, such as reviewing the current password policies or managing multiple policies for different user groups or applications.

```shell
curl --location 'https://api.authnull.kloudlearn.com/api/v1/instances/listPasswordPolicy' \
--header 'Content-Type: application/json' \
--data '{
    "machineIds":[1,2,3],
    "pageId":1,
    "pageSize": 10
}'
```

```http
POST /api/v1/instances/listAllPasswordPolicy HTTP/1.1
```



```json
[
  {
        "pageId":1,
        "pageSize":10
  
    }
]
```



### Access Token
Authorization Key Required 

### HTTP Request

`POST /api/v1/instances/addPasswordPolicy HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
pageId | Page ID refers to the page number.
pageSize | Page size refers to the number of endpoints groups to be fetched.

### HTTP response

`successfully Listed All Password Policy`

```json
[
  {
    "policyName":"PolicynonMachineTest",
    "templateName":"Template1",
    "minLen":"5",
    "maxLen":"10",
    "firstChar":"",
    "allowUpperLower":"",
    "allowSpecial":"yes",
    "allowNumeric":"yes"
}
]

```

<aside class="success">
successfully Listed All Password Policy
</aside>

## Assign Policy To Endpoints
The Assign Policy to Endpoints API is a part of the Password Policy endpoint in User Management and is used to assign an existing password policy to a specific endpoint or group of endpoints. This API endpoint requires the unique identifier of the policy and the identifier of the endpoint(s) to be assigned to as input. Upon successful execution, the API returns a success message indicating that the policy has been assigned to the specified endpoint(s). This API is useful for managing password policies for different applications or user groups and ensuring consistent security standards across multiple endpoints.

```shell
curl --location 'https://api.authnull.kloudlearn.com/api/v1/instances/assignPolicyToMachine' \
--header 'Content-Type: application/json' \
--data '{
    "policyId":2,
    "instanceId":1

}'
```

```http
POST /api/v1/instances/assignPolicyToMachine HTTP/1.1
```



```json
[
  {
    "policyId":2,
    "instanceId":1
  

}
]
```

This will Assign Policy To Machine.

### HTTP AuthKey
Authorization Key Required 

### HTTP Request

`POST /api/v1/instances/assignPolicyToMachine HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
policyId | The policyId specifies the unique identifier of a password policy to be retrieved, updated, or deleted.
instanceId | The instanceId is used to specify the ID of the instances that are part of the endpoint.


### HTTP response

`successfully Assigned Policy To endpoint`

```json
{
    "code": 200,
    "message": "Successfully Assigned Password Policy To Endpoint"
}

```

<aside class="success">
successfully Assigned Policy To endpoint
</aside>


## Update Password Policy
The Update Password Policy API is a part of the Password Policy endpoint in User Management and is used to update an existing password policy. This API endpoint requires the unique identifier of the policy and the updated policy settings as input, such as password length, complexity rules, or expiration policies.This API is useful for modifying password policies to reflect changing security needs or standards. It is important to note that updating a password policy may affect the security of user accounts and should be done with caution.

```shell
curl --location --request PUT 'https://api.authnull.kloudlearn.com/api/v1/instances/updatePasswordPolicy' \
--header 'Content-Type: application/json' \
--data '{
    "policyId": 1,
    "policyName":"testPolicy",
    "minLen":"",
    "maxLen": "",
    "firstChar": "",
    "allowUpperLower":"",
    "allowSpecial":"",
    "allowNumeric":""

}'
```

```http
POST /api/v1/instances/updatePasswordPolicy HTTP/1.1
```



```json
[
  {
        "policyId":2,
        "policyName":"PolicyManjuTest1",
        "minLen":"3",
        "maxLen":"5",
        "firstChar":"",
        "allowUpperLower":"",
        "allowSpecial":"",
        "allowNumeric":""
   
    
    }
]
```

This will update Password Policy.


### Access Token
Authorization Key Required 

### HTTP Request

`POST /api/v1/instances/updatePasswordPolicy HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
policyName | The policyName refers to the name of the policy that should be applied to the specified endpoint.
templateName |The templateName refers to the name of the password policy template that is being used to apply a set of rules and restrictions for creating and managing user passwords.
minLen | The minLen sets the minimum required length for a users password.
maxLen | The minLen sets the Maximum required length for a users password.
firstChar | The firstChar specifies whether the password requires the first character to be uppercase, lowercase, or a digit.
allowUpperLower | The allowUpperLower specifies whether the password policy allows the use of both uppercase and lowercase letters in passwords.
allowSpecial | The allowSpecial determines whether special characters are allowed in user passwords.
allowNumeric | The allowNumeric specifies whether or not numeric characters are allowed in user passwords.

### HTTP response

`successfully updated Password Policy`

```json
[
 {
  "Update Successfully"
 }
]

```

<aside class="success">
successfully updated Password Policy
</aside>

## Validate Password
The Validate Password API is a part of the Password Policy endpoint in User Management and is used to validate if a password meets the specified password policy requirements. This API endpoint requires the user password as input and returns a success message indicating if the password meets the policy requirements or an error message indicating which policy requirements were not met. This API is useful for ensuring that user passwords meet the specified security standards and reducing the risk of security breaches. It is typically used in conjunction with other password policy management APIs.

```shell
curl --location 'https://api.authnull.kloudlearn.com/api/v1/instances/validatePassword' \
--header 'Content-Type: application/json' \
--data '{

"machineId":"",

"password":""

}'
```

```http
POST /api/v1/instances/validatePolicy HTTP/1.1
```



```json
{

machineId:””

password:””

}
```

This will validate Password Policy.

### Access Token
Authorization Key Required 

### HTTP Request

`POST /api/v1/instances/validatePolicy HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
policyName | The policyName refers to the name of the policy that should be applied to the specified endpoint.
templateName |The templateName refers to the name of the password policy template that is being used to apply a set of rules and restrictions for creating and managing user passwords.
minLen | The minLen sets the minimum required length for a users password.
maxLen | The minLen sets the Maximum required length for a users password.
firstChar | The firstChar specifies whether the password requires the first character to be uppercase, lowercase, or a digit.
allowUpperLower | The allowUpperLower specifies whether the password policy allows the use of both uppercase and lowercase letters in passwords.
allowSpecial | The allowSpecial determines whether special characters are allowed in user passwords.
allowNumeric | The allowNumeric specifies whether or not numeric characters are allowed in user passwords.



### HTTP response

`successfully Password Policy validated`

```json
[
 {
  "Validation Successful"
 }
]

```

<aside class="success">
successfully Password Policy validated
</aside>