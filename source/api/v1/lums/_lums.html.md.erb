# Linux User Management
This is a PRD for the Linux user management service (LUMS) covering the following use case:

1.Provision new users from a SSO console

2.Provision users with temporary passwords

3.Do password management of all local users with a secrets management service like Vault. 

4.Provision users with temporary ssh keys

5.Provision and manage users with Just In Time (JIT) entitlements., i.e. escalate privileges. 

## Add User


```shell
curl "https://api.authnull.kloudlearn.com/api/v1/add-linux-user-info" 
  -H "Authorization: AuthNull"
```

```HTTP
POST /api/v1/add-linux-user-info HTTP/1.1




```json
[
{
    "Username":"sefali",
    "AuthMethod":"s",
    "UserType":"6",
    "CustomMapping":"6"
   
}
]
```

This will add the users to LUMs.
`

### Access Token
Authorization Key Required 

### HTTP Request

`POST /api/v1/add-linux-user-info HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
UserName | an identification used by a person with access to a computer, network, or online service..
AuthMethod | Authentication is the process of determining whether someone or something is, in fact, who or what it says it is..
UserType | Roles is the user is admin or user it signify.
CustomMapping | It expresses ideas, thoughts and relationships among and between different spatial elements in multiple dimensions..

### HTTP response

`successfully Added`


<aside class="success">
Remember — This is for Add in LUMs!
</aside>
 
## List All User


```shell
curl "https://api.authnull.kloudlearn.com/api/v1/list-all-lums" 
  -H "Authorization: AuthNull"
```

```HTTP
POST /api/v1/list-all-lums HTTP/1.1




```json
{
"pageId": 1,
"pageSize": 50,
"domainId": 1,
"instanceId":0,
"Filter":
{"filterBy": "localGroups", "value": ""}}
```


### Access Token
Authorization Key Required 

### HTTP Request

`POST /api/v1/list-all-lums HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
pageId | Page Id
pageSize | Page Size
domainId | Domain Id
instanceId | Instance Id
Filter | Filter

### HTTP response

`successfully shown list of all linux user`


<aside class="success">
Remember — This is for Add in LUMs!
</aside>
 
## Delete User

```shell
curl "https://api.authnull.kloudlearn.com/api/v1/delete-user" 
  -H "Authorization: AuthNull"
```

```HTTP
DELETE /api/v1/delete-user HTTP/1.1




```json
[
{
    "linuxUserId": "1",
    
}
]
```

This will delete the users to LUMs.
`

### Access Token
Authorization Key Required 

### HTTP Request

`DELETE /api/v1/delete-user HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
LinuxUserId | A UID (user identifier) is a number assigned by Linux to each user on the system. This number is used to identify the user to the system and to determine which system resources the user can access. 

### HTTP response

`successfully Deleted`

<aside class="success">
Remember — This is for Add in LUMs!
</aside>

## Add user to machine


```shell
curl "https://api.authnull.kloudlearn.com/api/v1/addUserToMachine" 
  -H "Authorization: AuthNull"
```

```HTTP
POST /api/v1/addUserToMachine HTTP/1.1




```json
[
{
    "domainId":"1", 
    "instanceId":"1", 
    "userIds":"1"
  
}
]
```

This will add User To Machine.
`

### Access Token
Authorization Key Required 

### HTTP Request

`POST /api/v1/addUserToMachine HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
domainId | Domain Id of the instances.
instanceId |Instance Id of the used
userIds | userId is used

### HTTP response

`successfully add user to machine`

<aside class="success">
Remember — This is for Add in LUMs!
</aside>


## update Endpoint User Wallet

```shell
curl "https://api.authnull.kloudlearn.com/api/v1/updateEPMUserWallet" 
  -H "Authorization: AuthNull"
```

```HTTP
POST /api/v1/updateEPMUserWallet HTTP/1.1




```json
[
{
    "linux_user_id":"1", 
    "server_group_name":"xyz-xyz-xyz", 
    "authnull_user_name":"abc-abc-abd", 
    "authnull_user_group":"xyz-xyz-xyz"
   
}
]
```

This will Update EPM User Wallet.
`

### Access Token
Authorization Key Required 

### HTTP Request

`POST /api/v1/updateEPMUserWallet HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
linux_user_id | linuxUserId is for linux user.
server_group_name |ServerGroupName is for lums.
authnull_user_name | AuthNull user name is the name.
authnull_user_group | AuthNull user group is for group.

### HTTP response

`successfully Update EPM User Wallet`

<aside class="success">
Remember — This is for Add in LUMs!
</aside>

## update Endpoint User Info

```shell
curl "https://api.authnull.kloudlearn.com/api/v1/updateEpmUserInfo" 
  -H "Authorization: AuthNull"
```

```HTTP
POST /api/v1/updateEpmUserInfo HTTP/1.1




```json
[
{
    "linux_user_id":"1",
    "username":"xyz-xyz-xyz", 
    "auth_method":"abc", 
    "user_type":"abc", 
    "credential_type":"abc", 
    "custom_mapping":"asd"
  
}
]
```

This will update Epm User Information.
`

### Access Token
Authorization Key Required 

### HTTP Request

`POST /api/v1/updateEpmUserInfo HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
linux_user_id | linuxUserId is for linux user.
username | user name is for lums.
auth_method | AuthNull authentication methad.
user_type | Type of user.
credential_type | credential type.
custom_mapping | custom mapping.

### HTTP response

`successfully Update EPM User Information`

<aside class="success">
Remember — This is for Add in LUMs!
</aside>

## Password Policy
A proper password complexity policy would be: eight characters for the length of a password and at least three types of the following characters used: uppercase letters, lowercase letters, digits, and special characters. Add the following parameters and their values: minlen, dcredit, ucredit, lcredit, and ocredit.


## Add Password Policy 


```shell
curl "https://api.authnull.kloudlearn.com/api/v1/instances/addPasswordPolicy" 
  -H "Authorization: AuthNull"
```

```HTTP
POST /api/v1/instances/addPasswordPolicy HTTP/1.1




```json
[
  {
    "policyName":"PolicynonMachineTest",
    "templateName":"Template1",
    "minLen":"5",
    "maxLen":"10",
    "firstChar":"",
    "allowUpperLower":"",
    "allowSpecial":"yes",
    "allowNumeric":"yes"
  
}
]
```

This will add password policy.
`

### Access Token
Authorization Key Required 

### HTTP Request

`POST /api/v1/instances/addPasswordPolicy HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
policyName | Policy name is for linux user.
templateName | template for name name is for lums.
minLen | AuthNull authentication methad.
maxLen | maximum length for length.
firstChar | character type.
allowUpperLower | Allow upper lower case.
allowSpecial | custom mapping.
allowNumeric | allow numeric is to allow number

### HTTP response

`successfully Add Password Policy`

```json
{
    "code": 200,
    "message": "Successfully Added Password Policy"
}
```

<aside class="success">
Remember — This is for Add in LUMs!
</aside>

## Delete Password Policy

```shell
curl "https://api.authnull.kloudlearn.com/api/v1/instances/deletePasswordPolicy" 
  -H "Authorization: AuthNull"
```

```HTTP
DELETE /api/v1/instances/deletePasswordPolicy HTTP/1.1




```json
[
  {
        "policyId":1
  
    }
]
```

This will delete password policy.
`
### Access Token
Authorization Key Required 

### HTTP Request

`DELETE /api/v1/instances/deletePasswordPolicy HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
policyId | Policy id is for linux user.


### HTTP response

`successfully Add Password Policy`

```json
[
  {
    "policyName":"PolicynonMachineTest",
    "templateName":"Template1",
    "minLen":"5",
    "maxLen":"10",
    "firstChar":"",
    "allowUpperLower":"",
    "allowSpecial":"yes",
    "allowNumeric":"yes"
}
]

```

<aside class="success">
Remember — This is for Add in LUMs!
</aside>

## List All Password Policy


```shell
curl "https://api.authnull.kloudlearn.com/api/v1/instances/listAllPasswordPolicy" 
  -H "Authorization: AuthNull"
```

```HTTP
POST /api/v1/instances/listAllPasswordPolicy HTTP/1.1




```json
[
  {
        "pageId":1,
        "pageSize":10
  
    }
]
```

This will List all password policy.
`

### Access Token
Authorization Key Required 

### HTTP Request

`POST /api/v1/instances/addPasswordPolicy HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
pageId | Id for page.
pageSize | Page size for page.

### HTTP response

`successfully List All Password Policy`

```json
[
  {
    "policyName":"PolicynonMachineTest",
    "templateName":"Template1",
    "minLen":"5",
    "maxLen":"10",
    "firstChar":"",
    "allowUpperLower":"",
    "allowSpecial":"yes",
    "allowNumeric":"yes"
}
]

```

<aside class="success">
Remember — This is for Add in LUMs!
</aside>

## Assign Policy To Machine

```shell
curl "https://api.authnull.kloudlearn.com/api/v1/instances/assignPolicyToMachine" 
  -H "Authorization: AuthNull"
```

```HTTP
POST /api/v1/instances/assignPolicyToMachine HTTP/1.1




```json
[
  {
    "policyId":2,
    "instanceId":1
  

}
]
```

This will Assign Policy To Machine.

### HTTP AuthKey
Authorization Key Required 

### HTTP Request

`POST /api/v1/instances/assignPolicyToMachine HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
policyId | Policy id is for linux user.
instanceId | id for the instance


### HTTP response

`successfully Assign Policy To Machine`

```json
[
  {
    "policyName":"PolicynonMachineTest",
    "templateName":"Template1",
    "minLen":"5",
    "maxLen":"10",
    "firstChar":"",
    "allowUpperLower":"",
    "allowSpecial":"yes",
    "allowNumeric":"yes"
}
]

```

<aside class="success">
Remember — This is for Add in LUMs!
</aside>


## Update Password Policy

```shell
curl "https://api.authnull.kloudlearn.com/api/v1/instances/updatePasswordPolicy" 
  -H "Authorization: AuthNull"
```

```HTTP
POST /api/v1/instances/updatePasswordPolicy HTTP/1.1




```json
[
  {
        "policyId":2,
        "policyName":"PolicyManjuTest1",
        "minLen":"3",
        "maxLen":"5",
        "firstChar":"",
        "allowUpperLower":"",
        "allowSpecial":"",
        "allowNumeric":""
   
    
    }
]
```

This will update Password Policy.
`

### Access Token
Authorization Key Required 

### HTTP Request

`POST /api/v1/instances/updatePasswordPolicy HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
policyName | Policy name is for linux user.
templateName | template for name name is for lums.
minLen | AuthNull authentication methad.
maxLen | maximum length for length.
firstChar | character type.
allowUpperLower | Allow upper lower case.
allowSpecial | custom mapping.
allowNumeric | allow numeric is to allow number


### HTTP response

`successfully update Password Policy`

```json
[
 {
  "Update Successfully"
 }
]

```

<aside class="success">
Remember — This is for Add in LUMs!
</aside>

## Validate Password

```shell
curl "https://api.authnull.kloudlearn.com/api/v1/instances/validatePolicy" 
  -H "Authorization: AuthNull"
```

```HTTP
POST /api/v1/instances/validatePolicy HTTP/1.1




```json
[
  {
        "policyId":2,
        "policyName":"PolicyManjuTest1",
        "minLen":"3",
        "maxLen":"5",
        "firstChar":"",
        "allowUpperLower":"",
        "allowSpecial":"",
        "allowNumeric":""
  
    
    }
]
```

This will validate Password Policy.

### Access Token
Authorization Key Required 

### HTTP Request

`POST /api/v1/instances/validatePolicy HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
policyName | Policy name is for linux user.
templateName | template for name name is for lums.
minLen | AuthNull authentication methad.
maxLen | maximum length for length.
firstChar | character type.
allowUpperLower | Allow upper lower case.
allowSpecial | custom mapping.
allowNumeric | allow numeric is to allow number


### HTTP response

`successfully update Password Policy`

```json
[
 {
  "Update Successfully"
 }
]

```

<aside class="success">
Remember — This is for Add in LUMs!
</aside>