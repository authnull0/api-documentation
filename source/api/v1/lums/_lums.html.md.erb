# Endpoint User Management
This is a PRD for the Linux user management service (LUMS) covering the following use case:

1.Provision new users from a SSO console

2.Provision users with temporary passwords

3.Do password management of all local users with a secrets management service like Vault. 

4.Provision users with temporary ssh keys

5.Provision and manage users with Just In Time (JIT) entitlements., i.e. escalate privileges. 

## Add User


```shell
curl POST https://api.authnull.kloudlearn.com/api/v1/add-linux-user-info
```

```http
POST /api/v1/add-linux-user-info HTTP/1.1
```



```json
[
{
    "Username":"sefali",
    "AuthMethod":"s",
    "UserType":"6",
    "CustomMapping":"6"
   
}
]
```

This will add the users to LUMs.


### Access Token
Authorization Key Required 

### HTTP Request

`POST /api/v1/add-linux-user-info HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
UserName | an identification used by a person with access to a computer, network, or online service..
AuthMethod | Authentication is the process of determining whether someone or something is, in fact, who or what it says it is..
UserType | Roles is the user is admin or user it signify.
CustomMapping | It expresses ideas, thoughts and relationships among and between different spatial elements in multiple dimensions..

### HTTP response

`successfully Added`


<aside class="success">
Remember — This is for Add in LUMs!
</aside>
 
## List All User


```shell
curl --location 'https://api.authnull.kloudlearn.com/api/v1/lums/listAllEpmUsers
```

```http
POST /api/v1/lums/listAllEpmUsers HTTP/1.1
```




```json
{
"pageId": 1,
"pageSize": 50,
"domainId": 1,
"instanceId":0,
"Filter":
{"filterBy": "localGroups", "value": ""}}
```


### Access Token
Authorization Key Required 

### HTTP Request

`POST /api/v1/lums/listAllEpmUsers HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
pageId | Page Id
pageSize | Page Size
domainId | Domain Id
instanceId | Instance Id
Filter | Filter

### HTTP response

`successfully shown list of all linux user`


<aside class="success">
Remember — This is for Add in LUMs!
</aside>
 
## Add Endpoint User Info

```shell
curl POST 'https://api.authnull.kloudlearn.com/api/v1/lums/addEpmUserInfo'
```

```http
POST /api/v1/lums/addEpmUserInfo HTTP/1.1
```



```json
{
"domainId":1,
"userType":"Local",
"credType":"password",
"password":"manju",
"privilegedUser":"true",
"userName":"testManjuupdate",
"sshKey":"",
"motp":"",
"did":""
}
```


### Access Token
Authorization Key Required 

### HTTP Request

`POST /api/v1/lums/addEpmUserInfo HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
domainId | Domain Id
userType | Type of Users
credType | Credential Type
password | Password
privilegedUser | Priveleged User
userName | Name of user
sshKey | sshKey
motp | motp
did | DID


### HTTP response

```json
{
    "status": "Success",
    "message": "User Added successfully",
    "userId": "71"
}
```

`User Added successfully`

<aside class="success">
User Added successfully
</aside>

## Get Endpoint User detail


```shell
curl POST 'https://api.authnull.kloudlearn.com/api/v1/lums/getEpmUserDetail'
```

```http
POST /api/v1/lums/getEpmUserDetail
```



```json
{
"userId":26,
"domainId":1
}
```




### Access Token
Authorization Key Required 

### HTTP Request

`POST /api/v1/lums/getEpmUserDetail HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
domainId | Domain Id of the instances.
userIds | userId is used

### HTTP response

```json
{
"domainId":1,
"userId":26,
"userType":"Local",
"credType":"password",
"password":"manju",
"privilegedUser":"true",
"userName":"testManjuupdate",
"sshKey":"",
"motp":"",
"did":""
}
```

`Epm User Detail Fetched`

<aside class="success">
Epm User Detail Fetched
</aside>


## Update Endpoint User Info

```shell
curl PUT 'https://api.authnull.kloudlearn.com/api/v1/lums/updateEpmUserInfo
```

```http
PUT /api/v1/lums/updateEpmUserInfo HTTP/1.1
```



```json
{
"userId":26,
"domainId":1,
"userType":"Local",
"credType":"password",
"password":"manju",
"privilegedUser":"true",
"userName":"testManjuupdate",
"sshKey":"",
"motp":"",
"did":""
}
```



### Access Token
Authorization Key Required 

### HTTP Request

`PUT /api/v1/lums/updateEpmUserInfo HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
userId | Id of the user
domainId | Domain Id
userType | Type of user
credType | Credential Type
passord | Password
privilegedUser | privileged User
userName | Name of User
sshKey | sshKey
motp | motp
did | DID


### HTTP response

`EPM User Info updated`

<aside class="success">
EPM User Info updated
</aside>




## Delete Endpoint User

```shell
curl DELETE 'https://api.authnull.kloudlearn.com/api/v1/lums/deleteEpmUser
```

```http
DELETE api/v1/lums/deleteEpmUser HTTP/1.1
```



```json
{
"epmUserId":899,
"domainId":1,
"userName":"messagebus",
"instanceIds":[2]

}
```



### Access Token
Authorization Key Required 

### HTTP Request

`DELETE api/v1/lums/deleteEpmUser HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
domainId | Domain Id
epmUserId | EPM user Id
userName | User Name
instanceId | Instance Id



### HTTP response

```json
{
    "status": "Success",
    "message": "User deleted successfully",
    "userId": "25"
}
```

`Endpoint User deleted`

<aside class="success">
Endpoint User deleted
</aside>

## Password Policy
A proper password complexity policy would be: eight characters for the length of a password and at least three types of the following characters used: uppercase letters, lowercase letters, digits, and special characters. Add the following parameters and their values: minlen, dcredit, ucredit, lcredit, and ocredit.


## Add Password Policy 


```shell
curl POST 'https://api.authnull.kloudlearn.com/api/v1/instances/addPasswordPolicy
```

```http
POST /api/v1/instances/addPasswordPolicy HTTP/1.1
```



```json
{
    "policyName":"PolicynonMachineTest",
    "templateName":"Template1",
    "minLen":"5",
    "maxLen":"10",
    "firstChar":"",
    "allowUpperLower":"",
    "allowSpecial":"yes",
    "allowNumeric":"yes"
}
```


### Access Token
Authorization Key Required 

### HTTP Request

`POST /api/v1/instances/addPasswordPolicy HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
policyName | Policy name is for linux user.
templateName | template for name name is for lums.
minLen | AuthNull authentication methad.
maxLen | maximum length for length.
firstChar | character type.
allowUpperLower | Allow upper lower case.
allowSpecial | custom mapping.
allowNumeric | allow numeric is to allow number

### HTTP response

`successfully Added Password Policy`

```json
{
    "code": 200,
    "message": "Successfully Added Password Policy"
}
```

<aside class="success">
successfully Added Password Policy
</aside>

## Delete Password Policy

```shell
curl DELETE https://api.authnull.kloudlearn.com/api/v1/instances/deletePasswordPolicy
```

```http
DELETE /api/v1/instances/deletePasswordPolicy HTTP/1.1
```



```json
[
  {
        "policyId":1
  
    }
]
```

### Access Token
Authorization Key Required 

### HTTP Request

`DELETE /api/v1/instances/deletePasswordPolicy HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
policyId | Policy id is for linux user.


### HTTP response

`successfully deleted Password Policy`

```json
[
  {
    "policyName":"PolicynonMachineTest",
    "templateName":"Template1",
    "minLen":"5",
    "maxLen":"10",
    "firstChar":"",
    "allowUpperLower":"",
    "allowSpecial":"yes",
    "allowNumeric":"yes"
}
]

```

<aside class="success">
successfully deleted Password Policy
</aside>

## List All Password Policy


```shell
curlPOST  https://api.authnull.kloudlearn.com/api/v1/instances/listAllPasswordPolicy
```

```http
POST /api/v1/instances/listAllPasswordPolicy HTTP/1.1
```



```json
[
  {
        "pageId":1,
        "pageSize":10
  
    }
]
```



### Access Token
Authorization Key Required 

### HTTP Request

`POST /api/v1/instances/addPasswordPolicy HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
pageId | Id for page.
pageSize | Page size for page.

### HTTP response

`successfully Listed All Password Policy`

```json
[
  {
    "policyName":"PolicynonMachineTest",
    "templateName":"Template1",
    "minLen":"5",
    "maxLen":"10",
    "firstChar":"",
    "allowUpperLower":"",
    "allowSpecial":"yes",
    "allowNumeric":"yes"
}
]

```

<aside class="success">
successfully Listed All Password Policy
</aside>

## Assign Policy To Machine

```shell
curl POST https://api.authnull.kloudlearn.com/api/v1/instances/assignPolicyToMachine
```

```http
POST /api/v1/instances/assignPolicyToMachine HTTP/1.1
```



```json
[
  {
    "policyId":2,
    "instanceId":1
  

}
]
```

This will Assign Policy To Machine.

### HTTP AuthKey
Authorization Key Required 

### HTTP Request

`POST /api/v1/instances/assignPolicyToMachine HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
policyId | Policy id is for linux user.
instanceId | id for the instance


### HTTP response

`successfully Assigned Policy To Machine`

```json
[
  {
    "policyName":"PolicynonMachineTest",
    "templateName":"Template1",
    "minLen":"5",
    "maxLen":"10",
    "firstChar":"",
    "allowUpperLower":"",
    "allowSpecial":"yes",
    "allowNumeric":"yes"
}
]

```

<aside class="success">
successfully Assigned Policy To Machine
</aside>


## Update Password Policy

```shell
curl POST https://api.authnull.kloudlearn.com/api/v1/instances/updatePasswordPolicy
```

```http
POST /api/v1/instances/updatePasswordPolicy HTTP/1.1
```



```json
[
  {
        "policyId":2,
        "policyName":"PolicyManjuTest1",
        "minLen":"3",
        "maxLen":"5",
        "firstChar":"",
        "allowUpperLower":"",
        "allowSpecial":"",
        "allowNumeric":""
   
    
    }
]
```

This will update Password Policy.


### Access Token
Authorization Key Required 

### HTTP Request

`POST /api/v1/instances/updatePasswordPolicy HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
policyName | Policy name is for linux user.
templateName | template for name name is for lums.
minLen | AuthNull authentication methad.
maxLen | maximum length for length.
firstChar | character type.
allowUpperLower | Allow upper lower case.
allowSpecial | custom mapping.
allowNumeric | allow numeric is to allow number


### HTTP response

`successfully updated Password Policy`

```json
[
 {
  "Update Successfully"
 }
]

```

<aside class="success">
successfully updated Password Policy
</aside>

## Validate Password

```shell
curl POST https://api.authnull.kloudlearn.com/api/v1/instances/validatePolicy
```

```http
POST /api/v1/instances/validatePolicy HTTP/1.1
```



```json
[
  {
        "policyId":2,
        "policyName":"PolicyManjuTest1",
        "minLen":"3",
        "maxLen":"5",
        "firstChar":"",
        "allowUpperLower":"",
        "allowSpecial":"",
        "allowNumeric":""
  
    
    }
]
```

This will validate Password Policy.

### Access Token
Authorization Key Required 

### HTTP Request

`POST /api/v1/instances/validatePolicy HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | ------- | -----------
policyName | Policy name is for linux user.
templateName | template for name name is for lums.
minLen | AuthNull authentication methad.
maxLen | maximum length for length.
firstChar | character type.
allowUpperLower | Allow upper lower case.
allowSpecial | custom mapping.
allowNumeric | allow numeric is to allow number


### HTTP response

`successfully Password Policy validated`

```json
[
 {
  "Update Successfully"
 }
]

```

<aside class="success">
successfully Password Policy validated
</aside>