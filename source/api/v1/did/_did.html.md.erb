# Decentralized Identities
Decentralized identities (DIDs) are a type of digital identity that is not controlled by any central authority or organization. Instead, DIDs are created and managed by the individual user, giving them greater control and ownership over their personal data and online presence.

DIDs are typically based on blockchain technology, which provides a secure and transparent way to store and manage identity information. Each DID is assigned a unique identifier, which can be used to authenticate and verify the identity of the user in a variety of contexts, such as logging into websites, accessing financial services, or participating in online communities.

One of the key benefits of DIDs is that they allow individuals to maintain their privacy and control over their personal data. Instead of relying on centralized databases or third-party identity providers, DIDs are stored locally on the users device and can be selectively shared with others as needed. This enables users to share only the information that is necessary, without revealing unnecessary or sensitive details.

DIDs are also designed to be interoperable, meaning that they can be used across different platforms and applications. This enables users to maintain a consistent identity across different services, without having to create and manage multiple accounts or identities.

Overall, DIDs represent a promising new approach to digital identity management that prioritizes user control and privacy. As the technology continues to evolve, it has the potential to transform the way that individuals interact with the digital world, enabling greater security, privacy, and trust in online interactions.

## Create DID for Issuer
Verifiable credentials are a form of digital identity that allows individuals and organizations to securely and selectively share information about themselves. By creating an Issuer DID, an entity can establish a trusted identity on a decentralized network, and issue verifiable credentials that can be cryptographically verified by third parties.

```http
https://api.did.kloudlearn.com/api/v1/did/createIssuerDid
```

```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/did/createIssuerDid'  \
--header 'Content-Type: application/json' \
--data '{
  "domainId": 1,
  "method": "key",
  "name": "Broadcom R&D",
  "description": "R&D department of Broadcom"
}'
```

```json
{
  "domainId": 1,
  "method": "key",
  "name": "Broadcom R&D",
  "description": "R&D department of Broadcom"
}

```

### Access Token
Authorization Key Required 

### HTTP Request
`https://api.did.kloudlearn.com/api/v1/did/createIssuerDid`

### Query Parameters
Parameter | Description
--------- | -----------
method    |This refers to the specific DID method that will be used to create the DID. A DID method is a set of rules and specifications that govern how a DID is created, stored, and used. There are many different DID methods available, each with its own unique features and requirements. 
domainId |This refers to the company or organization who is using the service.
description | The description allows developers to provide additional information and context about the data being shared or requested within a decentralized identity ecosystem.



```json
{
  "id": "did:key:z6MkkHNepDyi2FYcNAwAHaujXaPFZG8dAzUFPJvneySxmXAK",
  "code": 200,
  "message": "Successfully created DID",
  "status": "Success"
}

```

### HTTP Response
`Successfully created DID`

## Create DID for Holder
A Holder DID is a Decentralized Identifier (DID) that is used by an user to store and control their own verifiable credentials.


```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/did/createHolderDid'  \
--header 'Content-Type: application/json' \
--data '{
  "method": "brcm",
  "domainId": 1 ,
  "walletUserId" : 104,
  "issuerId" : 126,
  "name":"Hema",
  "description":"This is a backend Test"
}'
```

```http
POST /api/v1/did/createHolderDid HTTP/1.1
```
```json
{
  "method": "brcm",
  "domainId": 1 ,
  "walletUserId" : 104,
  "issuerId" : 126,
  "name":"Hema",
  "description":"This is a backend Test"
}

```
### Access Token
Authorization Key Required 

### HTTP Request
`POST /api/v1/did/createHolderDid HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | -----------
 method   |This refers to the specific DID method that will be used to create the DID. A DID method is a set of rules and specifications that govern how a DID is created, stored, and used. There are many different DID methods available, each with its own unique features and requirements.  
domainId |This refers to the company or organization which the user is part of. 
walletUserId   |This refers to the unique ID of the user. 
issuerDid | The issuerDid is a required field used to identify the decentralized identity issuer and verify the authenticity of the credentials associated with the identity.
name | The name is used to specify a user-friendly name or label for the decentralized identity credentials, making them easier to manage and identify.
description | The description allows developers to provide additional information and context about the data being shared or requested within a decentralized identity ecosystem.


```json
{
  "id": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
  "code": 200,
  "message": "Successfully created DID",
  "status": "Success"
}
```

### HTTP Response
`Successfully created DID`

## DID List
The DID List API in Decentralized Identities (DIDs) enables users to access and retrieve a list of available Decentralized Identifiers (DIDs) registered on a decentralized network. The API allows users to search and filter the list based on their specific needs and requirements, providing them with a way to discover and connect with other participants in the decentralized identity ecosystem.


```http
POST /api/v1/did/DIDList HTTP/1.1
```

```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/did/DIDList' \
--header 'Content-Type: application/json' \
--data '{
  "domainId": 1,
  "issuerId": 2,
  "userId": 104  
}'
```

```json
{
  "domainId": 1,
  "issuerId": 2,
  "userId": 104  
}
```

### Access Token
Authorization Key Required 

### HTTP Request
`POST /api/v1/did/DIDList HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | ----------- 
domainId |This refers to the company or organization who is using the service.
issuerDID |The issuerDid is a required field used to identify the decentralized identity issuer and verify the authenticity of the credentials associated with the identity.
userId | The userId specifies the unique identifier associated with a user, enabling secure authentication and authorization of data exchange and access within a decentralized identity ecosystem. 

```json
[
    {
        "DIDType": "Issuer",
        "domainId": 1,
        "did": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "issuerName": "Broadcom",
        "credentialIssued": 1,
        "desc": "This a issuer DID",
        "lastYpdatedAt": "02-12-2023 12:12:12"
    },
    {
        "DIDType": "User",
        "domainId": 1,
        "did": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "issuerName": "Broadcom",
        "credentialIssued": 1,
        "desc": "This a User DID",
        "lastYpdatedAt": "02-12-2023 12:12:12"
    },
    {
        "DIDType": "User",
        "domainId": 1,
        "did": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "issuerName": "Broadcom",
        "credentialIssued": 1,
        "desc": "This a User DID",
        "lastYpdatedAt": "02-12-2023 12:12:12"
    },
    {
        "DIDType": "User",
        "domainId": 1,
        "did": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "issuerName": "Broadcom",
        "credentialIssued": 1,
        "desc": "This a User DID",
        "lastYpdatedAt": "02-12-2023 12:12:12"
    }
  ]
    
```

### HTTP Response
`Successfully Listed DID`

## Search DID 
The SEARCH DID API is an API (Application Programming Interface) used in decentralized identities to search for and retrieve information about a specific DID (Decentralized Identifier) on a given network or ledger.

The SEARCH DID API allows developers to query a specific network or ledger to find information related to a specific DID. This can include information such as public keys, service endpoints, and other metadata associated with the DID.


```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/did/SearchDID' \
--header 'Content-Type: application/json' \
--data '{
  "name":"hema",
  "didType":"ISSUER",
  "pageNumber":1,
  "pageSize":10
}'
```

```http
POST https://api.did.kloudlearn.com/api/v1/did/SearchDID HTTP/1.1
```
```json
{
  "name":"hema",
  "didType":"ISSUER",
  "pageNumber":1,
  "pageSize":10
}
```

### Access Token
Authorization Key Required 


### HTTP Request
`POST https://api.did.kloudlearn.com/api/v1/did/SearchDID HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | -----------
name |The name is used to specify a user-friendly name or label for the decentralized identity credentials, making them easier to manage and identify.
didType | The didType parameter in search DID API specifies the type of Decentralized Identifier (DID) that should be searched for.
pageNumber | The pageNumber is used to specify the page number of results to retrieve when querying for DIDs. 
pageSize | The pageSize specifies the number of search results to be returned per page.


```json
{
  "count": 1,
  "didList": [
    {
      "didType": "Issuer",
      "domainId": 1,
      "did": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "issuerName": "hema",
      "credentialIssued": 1,
      "desc": "test",
      "lastUpdatedAt": "02-12-2023 12:12:12"
    }
  ]
}
```

### HTTP Response
`API found successfully`



## Delete DID 
The DELETE DID API is used to delete a decentralized identifier (DID) and its associated data from the underlying decentralized ledger, which can be useful in scenarios such as revoking a users access or deleting outdated information.

```shell
curl --location --request DELETE 'https://api.did.kloudlearn.com/api/v1/did/deleteDid' \
--header 'Content-Type: application/json' \
--data '{
  "domainId": 1,
  "dids": [
    {
      "type": "Issuer",
      "did": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    } ,
    {
      "type": "User",
      "did": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    }
  ]
}'
```

```http
DELETE https://api.did.kloudlearn.com/api/v1/did/deleteDid HTTP/1.1
```
```json
{
  "domainId": 1,
  "dids": [
    {
      "type": "Issuer",
      "did": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    } ,
    {
      "type": "User",
      "did": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    }
  ]
}
```

### Access Token
Authorization Key Required 


### HTTP Request
`DELETE https://api.did.kloudlearn.com/api/v1/did/deleteDid HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | -----------
domainId | This refers to the company or organization which the user is part of. 
dids | The did specifies the unique decentralized identifier associated with a decentralized identity, allowing for authentication and authorization of data exchange and access within a decentralized identity ecosystem.
type | The type  specifies the type of data being shared or requested within a decentralized identity ecosystem, such as a public key or verifiable credential. 

```json
{
  "code": 200,
  "message": "2 DIDs deleted successfully",
  "status": "Success"
}
```

### HTTP Response
`DIDs deleted successfully`


## Create Schema 
The Create Schema API in Decentralized Identities (DIDs) enables issuers to create and manage a list of verifiable credential schemas that can be used to define the structure and rules for different types of credentials. The API allows issuers to define the attributes and format of each schema, and publish the list to a decentralized network, making it available for use by other participants in the ecosystem 

```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/schema/createSchema' \
--header 'Content-Type: application/json' \
--data '{
  "author": "did:key:z6Mkit1hjN4WZYCY2GLrjpeAfJKLBB7QmQ9dHQpsutcznKop", 
  "name": "EPM User",
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "description": "EPM User Schema",
    "type": "object",
    "properties": {
      "userId": {
        "type": "number"
      },
      "name": {
        "type": "string"
      }
    },
    "additionalProperties": false
  },
  "sign": false
}
'
```

```http
POST /api/v1/schema/createSchema HTTP/1.1
```

```json
{
  "author": "did:key:z6Mkit1hjN4WZYCY2GLrjpeAfJKLBB7QmQ9dHQpsutcznKop", 
  "name": "EPM User",
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "description": "EPM User Schema",
    "type": "object",
    "properties": {
      "userId": {
        "type": "number"
      },
      "name": {
        "type": "string"
      }
    },
    "additionalProperties": false
  },
  "sign": false
}

```

### Access Token
Authorization Key Required 

### HTTP Request
`POST /api/v1/schema/createSchema HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | -----------
author  | The author is used to identify the entity or individual who created the decentralized identity credentials or the verifiable presentation request.
name | The name is used to specify a user-friendly name or label for the decentralized identity credentials, making them easier to manage and identify.
schema | The schema is a required field used to define the data structure and format of the verifiable credential or presentation, ensuring interoperability and standardization across different identity systems.
description | The description allows developers to provide additional information and context about the data being shared or requested within a decentralized identity ecosystem.
type | The type  specifies the type of data being shared or requested within a decentralized identity ecosystem, such as a public key or verifiable credential. 
properties | The properties allows developers to define additional metadata or attributes about the data being shared or requested within a decentralized identity ecosystem, such as the issuer or expiration date of a verifiable credential. 
userId | The userId specifies the unique identifier associated with a decentralized identity and is typically used to authenticate and authorize access to specific resources or data.
additionalProperties | The additionalProperties allows developers to define custom or non-standard properties and values for the data being shared or requested within a decentralized identity ecosystem.
sign | The sign is used to sign data with a private key associated with a decentralized identity, providing proof of ownership and enabling secure data exchange within a decentralized identity ecosystem.

```json
{
    "id": "d97534d3-260c-4341-b578-e033dcf3bb99",
    "Schema": {
        "type": "https://w3c-ccg.github.io/vc-json-schemas/schema/2.0/schema.json",
        "version": "1.0",
        "id": "d97534d3-260c-4341-b578-e033dcf3bb99",
        "name": "EPM User",
        "author": "did:key:z6Mkit1hjN4WZYCY2GLrjpeAfJKLBB7QmQ9dHQpsutcznKop",
        "authored": "2023-02-28T15:34:42Z",
        "Schema": {
            "$id": "d97534d3-260c-4341-b578-e033dcf3bb99",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "additionalProperties": false,
            "description": "EPM User Schema",
            "properties": {
                "name": {
                    "type": "string"
                },
                "userId": {
                    "type": "number"
                }
            },
            "type": "object"
        }
    }
}
```

### HTTP Response
`Schema List created`

## Credential Schema List 
The Credential Schema List API in Decentralized Identities (DIDs) enables users to access and retrieve a list of available verifiable credential schemas published on a decentralized network. The API allows users to search and filter the list based on their specific needs and requirements, enabling them to create and manage verifiable credentials in a secure, transparent, and interoperable manner.

```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/credential' \
--header 'Content-Type: application/json' \
--data '{
   "domainId": 1,
   "issuerDid": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
}
'
```

```http
POST /api/v1/credential/credentialSchemaList HTTP/1.1
```

```json
{
   "domainId": 1,
   "issuerDid": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
}

```

### Access Token
Authorization Key Required 


### HTTP Request
`POST /api/v1/credential/credentialSchemaList HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | -----------
domainId  | This refers to the company or organization which the user is part of. 
issuerDID |The issuerDid is a required field used to identify the decentralized identity issuer and verify the authenticity of the credentials associated with the identity.

```json
[
    {
        "id": 1,
        "name": "SSH"
    }
]
```

### HTTP Response
`Credential Schema Listed`


## Create Verifiable Credential
Verifiable Credentials (VCs) are digital credentials that contain information about a person or entity, which can be verified by others. A Decentralized Identifier (DID) is a unique identifier that allows individuals or organizations to control their own digital identity. Combining these two technologies, a Verifiable Credential DID is a digital credential that is associated with a DID, allowing for secure and decentralized verification of the credentials authenticity and ownership

```shell
curl --location --request POST 'https://api.authnull.kloudlearn.com/api/v1/issueVerifiableCredential'  \
--header 'Content-Type: application/json' \
--data '{
	"domainId" : 1,
	"issuerDid" : "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
	"holderDid": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
	"schemaId" : 1,
	"credentialName": "EPM User",
	"metadata":{
		"epmUsername": "john",
            "epmPassword": "xxx",
            "holderDID": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
            "holderId": 1
    },
	"expiry": "2024-01-01T00:00:00Z"
}'
```

```http
POST /api/v1/credential/createCredential HTTP/1.1
```

```json
{
	"domainId" : 1,
	"issuerDid" : "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
	"holderDid": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
	"schemaId" : 1,
	"credentialName": "EPM User",
	"metadata":{
		"epmUsername": "john",
            "epmPassword": "xxx",
            "holderDID": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
            "holderId": 1
    },
	"expiry": "2024-01-01T00:00:00Z"
}
```
### Access Token
Authorization Key Required 

### HTTP Request
`POST /api/v1/credential/createCredential HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | -----------
domainId | This refers to the company or organization who is issuing the VC or Verifiable Credential. 
issuerDid | The issuerDid is a required field used to identify the decentralized identity issuer and verify the authenticity of the credentials associated with the identity.
holderDid |The holderDid is a required field used to identify the holder of the decentralized identity credentials being used for authentication or authorization purposes.
schemaId | It refers to the schema used to create the verifiable credential.
metadata | These are the set of properties or claims.
 

 ```json
 {
    "code": 200,
    "message": "Credential Assigned successfully",
    "status": "SUCCESS"
}
```

### HTTP Response
`Credential Assigned successfully`

## Assign Credential to wallet
The Assign Credential to Wallet API in Decentralized Identities (DIDs) enables users to securely store and manage their verifiable credentials in a decentralized wallet. This API allows users to request, receive and store verifiable credentials issued by trusted issuers, providing them with greater control and ownership over their personal data.

```shell
curl --location 'https://api.did.kloudlearn.com/api/v1/walletService/assignWalletUser' \
--header 'Content-Type: application/json' \
--data '{
  "walletId":[1,3],
  "userId": [104.105],
  "credentialId": [10]
}'
```

```http
POST /api/v1/walletService/assignWalletUser HTTP/1.1
```

```json
{
  "walletId":[1,3],
  "userId": [104.105],
  "credentialId": [10]
}

```
### Access Token
Authorization Key Required 

### HTTP Request
`POST /api/v1/walletService/assignWalletUser HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | -----------
walletId | The walletId  is an optional field used to specify the unique identifier of the digital wallet containing the users decentralized identity credentials.
userId | The userId specifies the unique identifier associated with a decentralized identity and is typically used to authenticate and authorize access to specific resources or data.
credentialId |  The credentialId specifies the unique identifier associated with a verifiable credential, allowing for easy retrieval and management of verifiable credentials within a decentralized identity ecosystem.
```json
{
    "code": 200,
    "message": "Successfully Assigned Wallet",
    "status": "Success"
}
```

### HTTP Response
`Presentation Request raised Successfully`



## Poll Presentation Request 
The acknowledge credential API is an essential component of decentralized identity (DID) systems. It is a programming interface that enables a user to acknowledge or verify a digital credential issued by another party.This API is critical in ensuring the integrity and trustworthiness of digital credentials, as it enables users to verify the authenticity and validity of a credential before accepting it. Moreover, it provides users with control over their personal information by allowing them to disclose only the information necessary to prove their qualifications or identity.


```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/walletService/pollPresentationRequest' \
--header 'Content-Type: application/json' \
--data '{
  "walletId": 1,
  "walletKey": "abcxyz",
  "holderDid": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
}'
```

```http
POST api/v1/walletService/pollPresentationRequest HTTP/1.1
```
```json
{
  "walletId": 1,
  "walletKey": "abcxyz",
  "holderDid": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
}
```

### Access Token
Authorization Key Required 


### HTTP Request
`POST https://api.authnull.kloudlearn.com/api/v1/walletService/pollPresentationRequest HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | -----------
walletId | The walletId parameter in the API of Decentralized Identities refers to the unique identifier of a digital wallet that holds a users decentralized identities, verifiable credentials, and other related data.
walletKey | The walletKey is a private key used to sign and authenticate DID transactions and operations within a decentralized network.
holderDid | The holderDid is a required field used to identify the holder of the decentralized identity credentials being used for authentication or authorization purposes.


```json
{
  "id": "e8ffeca4-62e0-47e0-8751-4fa353b8f139",
  "input_descriptors": [
    {
      "id": "epmUser",
      "name": "EPM User Verifiable Credential",
      "purpose": "The EPM User VC allows to access to Linux Endpoints.",
      "format": {
        "jwt_vc": {
          "alg": [
            "EdDSA"
          ]
        }
      },
      "constraints": {
        "fields": [
          {
            "id": "epmUsername",
            "path": [
              "$.credentialSubject.epmUsername"
            ]
          },
          {
            "id": "epmPassword",
            "path": [
              "$.credentialSubject.epmPassword"
            ]
          },
          {
            "id": "holderDID",
            "path": [
              "$.credentialSubject.holderDID"
            ]
          },
          {
            "id": "holderId",
            "path": [
              "$.credentialSubject.holderId"
            ]
          }
        ]
      }
    }
  ]
}
```

### HTTP Response
`Credential Accepted`






## Submit Presentation Response
The Submit Presentation Response API in Decentralized Identities (DIDs) enables holders to respond to presentation requests from verifiers by submitting a verifiable presentation that meets the requested criteria. The API allows holders to selectively disclose only the information that is necessary, while maintaining control and ownership over their personal data.

```shell
curl POST https://api.did.kloudlearn.com/api/v1/walletService/submitPresentation
```

```http
POST https://api.did.kloudlearn.com/api/v1/walletService/submitPresentation HTTP/1.1
```

```json
{
  "walletId": 79,
  "holderDid": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
  "presentationRequestId": 64,
  "presentation": {
    "@context": [
      "https://www.w3.org/2018/credentials/v1"
    ],
    "credentialSchema": {
      "id": "d31ce42d-dffc-4178-93bd-838757d3df5d",
      "type": "JsonSchemaValidator2018"
    },
    "credentialSubject": {
      "epmPassword": "xxxxxx",
      "epmUsername": "muthu",
      "holderDID": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "holderId": "1",
      "id": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    },
    "expirationDate": "2028-12-12T00:00:00Z",
    "id": "f8e394c8-e6b8-4a68-a452-9e36a2879c8a",
    "issuanceDate": "2023-03-01T08:38:17Z",
    "issuer": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
    "type": [
      "VerifiableCredential"
    ],
    "proof": {
      "type": "Ed25519Signature2018",
      "created": "2020-02-03T17:23:49Z",
      "jws": "eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..AUQ3AJ23WM5vMOWNtYKuqZBekRAOUibOMH9XuvOd39my1sO-X9R4QyAXLD2ospssLvIuwmQVhJa-F0xMOnkvBg",
      "proofPurpose": "assertionMethod",
      "verificationMethod": "https://example.edu/issuers/keys/1"
    }
  }
}
```

### Access Token
Authorization Key Required 

### HTTP Request
`POST https://api.did.kloudlearn.com/api/v1/walletService/submitPresentation HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | -----------
walletId | The walletId  is an optional field used to specify the unique identifier of the digital wallet containing the users decentralized identity credentials.
presentationRequestId | The presentationRequestId is a required field used to identify the request for a verifiable credential presentation, allowing the holder of the credential to provide the necessary proof of identity for authentication or authorization purposes.
presentation | The presentation is used to specify the verifiable credential presentation data in a serialized format, which can be used to verify the authenticity and validity of the presented credentials.
holderDID |  The holderDid is a required field used to identify the holder of the decentralized identity credentials being used for authentication or authorization purposes.
type | The type  specifies the type of data being shared or requested within a decentralized identity ecosystem, such as a public key or verifiable credential. 
id |  The id specifies the unique identifier associated with a decentralized identity and is typically used to authenticate and authorize access to specific resources or data.




```json
{
  "code": 200,
  "status": "Success",
  "message": "Successfully submitted presentation"
}
```

### HTTP Response
`Successfully submitted presentation`



## Create Schema List
The Create Schema List API in Decentralized Identities (DIDs) enables issuers to create and manage a list of verifiable credential schemas that can be used to define the structure and rules for different types of credentials. The API allows issuers to define the attributes and format of each schema, and publish the list to a decentralized network, making it available for use by other participants in the ecosystem 

```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/schema/createSchema
```

```http
POST /api/v1/schema/createSchema HTTP/1.1
```

```json
{
  "author": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", 
  "name": "EPM User",
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "description": "EPM User Schema",
    "type": "object",
    "properties": {
      "userId": {
        "type": "number"
      },
      "name": {
        "type": "string"
      }
    },
    "additionalProperties": false
  },
  "sign": false
}

```
### Access Token
Authorization Key Required 

### HTTP Request
`POST /api/v1/schema/createSchema HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | -----------
author  | The author is used to identify the entity or individual who created the decentralized identity credentials or the verifiable presentation request.
name | The name is used to specify a user-friendly name or label for the decentralized identity credentials, making them easier to manage and identify.
schema | The schema is a required field used to define the data structure and format of the verifiable credential or presentation, ensuring interoperability and standardization across different identity systems.
description | The description allows developers to provide additional information and context about the data being shared or requested within a decentralized identity ecosystem.
type | The type  specifies the type of data being shared or requested within a decentralized identity ecosystem, such as a public key or verifiable credential. 
properties | The properties allows developers to define additional metadata or attributes about the data being shared or requested within a decentralized identity ecosystem, such as the issuer or expiration date of a verifiable credential. 
userId | The userId specifies the unique identifier associated with a decentralized identity and is typically used to authenticate and authorize access to specific resources or data.
additionalProperties | The additionalProperties allows developers to define custom or non-standard properties and values for the data being shared or requested within a decentralized identity ecosystem.
sign | The sign is used to sign data with a private key associated with a decentralized identity, providing proof of ownership and enabling secure data exchange within a decentralized identity ecosystem.

```json
{
    "id": "d97534d3-260c-4341-b578-e033dcf3bb99",
    "Schema": {
        "type": "https://w3c-ccg.github.io/vc-json-schemas/schema/2.0/schema.json",
        "version": "1.0",
        "id": "d97534d3-260c-4341-b578-e033dcf3bb99",
        "name": "EPM User",
        "author": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "authored": "2023-02-28T15:34:42Z",
        "Schema": {
            "$id": "d97534d3-260c-4341-b578-e033dcf3bb99",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "additionalProperties": false,
            "description": "EPM User Schema",
            "properties": {
                "name": {
                    "type": "string"
                },
                "userId": {
                    "type": "number"
                }
            },
            "type": "object"
        }
    }
}
```

### HTTP Response
`Schema List created`




## Issue Presentation Request
The Issue Presentation Request API in Decentralized Identities (DIDs) enables verifiers to request specific verifiable credentials from holders in a secure and decentralized manner. The API allows verifiers to specify the attributes they require and issue a presentation request to the holder, who can then choose which credentials to present without revealing unnecessary or sensitive information.

```shell
curl POST https://api.did.kloudlearn.com/api/v1/verifierService/issuePR
```

```http
POST /api/v1/verifierService/issuePR HTTP/1.1
```

```json
{
    "username": "john",
    "issuerDid": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
    "holderDid": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
    "walletUrl": "http://authnull.com/walletservice/wallets/1",
    "endpoint": "sisAdmin",
    "grouop": "R&D"
}

```
### Access Token
Authorization Key Required 

### HTTP Request
`POST /api/v1/verifierService/issuePR HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | -----------
username  | The username is an optional field used to associate a user-friendly identifier with a decentralized identity, making it easier for users to manage their digital identities.
issuerDid | The issuerDid is a required field used to identify the decentralized identity issuer and verify the authenticity of the credentials associated with the identity.
holderDid | The holderDid is a required field used to identify the holder of the decentralized identity credentials being used for authentication or authorization purposes.
walletUrl | The walletUrl is an optional field used to specify the URL location of the digital wallet containing the users decentralized identity credentials.
endpoint | The endpoint is a required field used to specify the network endpoint for communicating with the decentralized identity infrastructure.
groupop |The groupop is an optional field used to specify the group operation to be performed, such as creating a new group or adding/removing members from an existing group.

```json
{
    "presentationRequestId": 7,
    "message": "PR Raised Successfully",
    "status": "Success",
    "code": 200
}
```

### HTTP Response
`Presentation Request raised Successfully`

##  Poll Credentials 
The Credential Schema List API in Decentralized Identities (DIDs) enables users to access and retrieve a list of available verifiable credential schemas published on a decentralized network. The API allows users to search and filter the list based on their specific needs and requirements, enabling them to create and manage verifiable credentials in a secure, transparent, and interoperable manner.

```shell
curl --location --request POST 'https://api/v1/walletService/pollCredentials' \
--header 'Content-Type: application/json' \
--data '{
  "email": "john@kloudone.com",
  "walletKey": "xxx-xxx-xxx-xxx"
}
'
```

```http
POST /api/v1/walletService/pollCredentials HTTP/1.1
```

```json
{
  "email": "john@kloudone.com",
  "walletKey": "xxx-xxx-xxx-xxx"
}

```

### Access Token
Authorization Key Required 


### HTTP Request
`POST /api/v1/walletService/pollCredentials HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | -----------
email | The email  refers to the email address associated with a decentralized identity, which can be used to verify and authenticate a users identity across various services and platforms.
walletKey | The walletKey parameter in API of Decentralized Identities (DIDs) is a private key used to sign and authenticate DID transactions and operations within a decentralized network.


```json
{
  "code": 200,
  "status": "success",
  "message": "Retrived Credential Sucessfully",
  "email": "john@kloudone.com",
  "walletKey": "xxx-xxx-xxx-xxx",
  "credentials": [
    {
      "credentialId": 99,
      "credentialName": "Credential",
      "issuerName": "Broadcom",
      "issuerDid": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "userDid": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "jwt": "FWHQGjstawCugyKQPI0Q3QdSkEGJ3UIMydMnnjDxflAa+iNm+UyvqOf8ALMCby2OZ5HeC9Msh8uciNpzCXOeB5HxaXl1ZU3+I00oRqli+nwMRNUOj4ks8qaXXj5hpvMl2TwuX5MfBNYCeULHRz1HtV77Cn60ofzwVtZoI1so5X5c/xhalvnfqWansnswR1fC3ZNcXHRpY0Mm97PLUoCcVl6wuy3e8fmJGN2JvgvP2bRVubfqtDxLuDKnyJ6TwOZCIle8Lbmmfr2wXN8CfxxRlsuGdFHQ75Mhjbhe9H0ABmFClDgnJj4FaU2kTfpJTK5sBUgEekIxw2R4vCu8leeT0PI+UR68jARt6A2Tz3b1yfe1BDm8bU/8tRUd1RBTMELo4jheO2Eo37JJvEDCTT8YGALfkWGpdUYmrhe6RxgCGklE54oisdUOxNuP/U2yU7B72lbiqa6KDiYPUK4s+HfYui0yghdHwNuaFDfePh18na68ztMlfkspLP/jCcWn+vYlN5IQwesXXO0cg5qRSsxMVwvvBrnAQf98vU9yiZK5Ls324KduHCaDS44jy8yLCeMrPTOnypA/khQ0NY7jqvdhJ/XjSCnVJdzNuVkvcirZI64hofnZ4LfVJuNcH2qgjoEJ9vIHdyxodZf1iaXs1yTffUC6h64AViFijBDJPcY2BCGyv+IQgGeqkCRN6nEEWn5304/+7UD8/onG541NYMPmlmDSezKk7JH+8ju61O7NXMAh9vur4tGcjs2/iHDcMTdn80lkIy9mVEXJ8rtH9IbXXNGI11o0+lwHvSUE9D7WaLA0DMgMSXQFasT1GraesYpBm6eu1+TlRYtNTtXxXjD8+F1tbiwQzZ2KXFQtcvwTcLREZM3ZhqgnvNXFJ5XOorSYgl8v8wMGTj3c6P0PlaNfLQOz3O5pvfBn9+abK3xp66n84gpxVxZMcX0CE1fBilJ3vmsoXpN5tUcGjBacP/HIxN8/N1IY6QZw4RIgXq1pCSABHJZjQvMNpp0ghUnX7Nc3w83T01qyJZbkg0YKUivdiG8rniNCzzpHchNR16UkesiKm7IIXexlKI5LXK8FuFN6IqGF5gUvMceYCH6ZGWcQW2nYJH6Upw0DV3CUTIP3eQpSN8jzwJOZtDRXh1WseM/f7guV/2F0g96c2Y1XRp+VGKqbeVQsQPVaZCHLrWH38+nBNh92WwOIHXqVFWNY+g43BKenTjI0d/Neo2jmJeRxefPuSHWpzYQOEjSha3cB5g3DOKrGSQNePFrDd/l3KMPfaR6YWI043tP7k/jLdgJOA8nhRIQA9aUClpahOQJ96Auc0mSVcNpKlB+m4xPgxGWEs6ZXuZpNcEnX5M9BoTQ1Gq4iaJ33f8PzG6iCqyPzV9rh6ALzsIaZ4o1C/scLaGD1zSaSNQZH2HAB0Kxuf67vHgnpajNrzBB7TZLSz/ah23zLohTeHfE1I757WluxGbJGNkSEqe0v75sX5RtlZn8SvEZeL+EEf/A3p8HmITnA39cemeBnD6zoQtrmY87/XFDlPf7RJZD6vz8dCah90rCI21vt07KnTKSNuTESkiCedv91bYW+ZBABSFJGA6tc1NhMkmusAqrePqaDWX/7fLcicl5Yzn48G7g0nDsUMdxkmGOAhCgIY07Z+RMa2woFiTRBnSe5arGGxH2wwkWfmHg3MUu+iZDtWOtABHX0xpLA2TXRLarOnXR6hhp69fKTlg78rF6j3FW//8Rh6fEGMKoRRV/4kI+nP9nkTZbux8kKL5goJ5GlcZ0WQ83ESUqivi50n8PnxtP/l3FPj94bIuJI3RMQM3GefNrkZw==",
      "createdAt": "2023-03-03T06:23:31Z"
    }
  ]
}
```

### HTTP Response
`Credential Schema Listed`

## Acknowledge Credential 
The acknowledge credential API is an essential component of decentralized identity (DID) systems. It is a programming interface that enables a user to acknowledge or verify a digital credential issued by another party.This API is critical in ensuring the integrity and trustworthiness of digital credentials, as it enables users to verify the authenticity and validity of a credential before accepting it. Moreover, it provides users with control over their personal information by allowing them to disclose only the information necessary to prove their qualifications or identity.


```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/walletService/acknowledgeCredential' \
--header 'Content-Type: application/json' \
--data '{
  "walletId": 1,
  "userId": 104,
  "credentialId": 10,
  "accept": true
}'
```

```http
POST /api/v1/walletService/acknowledgeCredential HTTP/1.1
```
```json
{
  "walletId": 1,
  "userId": 104,
  "credentialId": 10,
  "accept": true
}
```

### Access Token
Authorization Key Required 


### HTTP Request
`POST https://api.authnull.kloudlearn.com/api/v1/walletService/acknowledgeCredential HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | -----------
walletId | The walletId parameter in the API of Decentralized Identities refers to the unique identifier of a digital wallet that holds a users decentralized identities, verifiable credentials, and other related data.
userId | The userId specifies the unique identifier associated with a user, enabling secure authentication and authorization of data exchange and access within a decentralized identity ecosystem. 
credentialId | The credentialId specifies the unique identifier associated with a verifiable credential, allowing for easy retrieval and management of verifiable credentials within a decentralized identity ecosystem.
accept | The accept is used to indicate the acceptance of a credential presented by the holder.


```json
{
  "code": 200,
  "status": "Success",
  "message": "Credential Accepted"
}
```

### HTTP Response
`Credential Accepted`







## Revoke Credential 
The Revoke Credential API in Decentralized Identities (DIDs) enables issuers to revoke previously issued verifiable credentials in a secure and decentralized manner. The API allows issuers to specify the reason for revocation and publish the revocation status to the decentralized network, ensuring that the revoked credential can no longer be used or presented by the holder.

```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/credential/revokecredential' \
--header 'Content-Type: application/json' \
--data '{
  "vcid": 2,
  "domainId": 2,
  "issuerDid": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
  "holderDid": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
}'
```

```http
POST /api/v1/credential/revokecredential HTTP/1.1
```
```json
{
  "vcid": 2,
  "domainId": 2,
  "issuerDid": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
  "holderDid": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
}
```

### Access Token
Authorization Key Required 


### HTTP Request
`POST https://api.authnull.kloudlearn.com/api/v1/presentationRequest HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | -----------
vcid | The vcid specifies the unique identifier associated with a verifiable credential, allowing for easy retrieval and management of verifiable credentials within a decentralized identity ecosystem.
domainId | This refers to the company or organization which the user is part of. 
issuerDid |The issuerDid is a required field used to identify the decentralized identity issuer and verify the authenticity of the credentials associated with the identity.
holderDid |The holderDid is a required field used to identify the holder of the decentralized identity credentials being used for authentication or authorization purposes.


```json
{
    "Message": "Credential Revoked successfully",
    "Code": 200,
    "Status": "Success"
}
```

### HTTP Response
`Credential Revoked successfully`



## Credential List
The Credential List API in Decentralized Identities (DIDs) enables users to access and retrieve a list of available verifiable credentials issued to them or stored in their decentralized wallet. The API allows users to search and filter the list based on their specific needs and requirements, providing them with greater control and ownership over their personal data.


```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/credential/credentialList' \
--header 'Content-Type: application/json' \
--data '{
   "domainId": 1
}'
```

```http
POST /api/v1/credential/credentialList HTTP/1.1
```

```json
{
   "domainId": 1
}
```
### Access Token
Authorization Key Required 

### HTTP Request
`POST /api/v1/credential/credentialList HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | -----------
domainId | This refers to the company or organization which the user is part of.

```json
{
    "code": 200,
    "message": "Credential List Success",
    "status": "Success",
    "domainId": 1,
    "credentials": [
        {
            "id": 1,
            "issuerId": 1,
            "schemaId": 1,
            "credentialId": "1",
            "name": "core item",
            "status": "ACTIVE"
        },
        {
            "id": 2,
            "issuerId": 0,
            "schemaId": 2,
            "credentialId": "a74d273c-632e-4830-9d7f-4408f2ea447f",
            "name": "Credential",
            "status": "Assigned"
        },
        {
            "id": 3,
            "issuerId": 0,
            "schemaId": 2,
            "credentialId": "62e78e9b-ac26-4216-a8d9-de400d06a9a6",
            "name": "Credential",
            "status": "Assigned"
        },
        {
            "id": 4,
            "issuerId": 29,
            "schemaId": 2,
            "credentialId": "83567dad-8920-4b1d-bfa0-67082f95b0b5",
            "name": "Credential",
            "status": "Assigned"
        },
        {
            "id": 5,
            "issuerId": 29,
            "schemaId": 2,
            "credentialId": "1a96a91a-209d-47bd-88f6-f4e3f3a121be",
            "name": "Credential",
            "status": "Assigned"
        }
    ]
}
```

### HTTP Response
`succesfully Credential Listed`

## Get Assigned Credential 
The Assigned Credential API is a feature of decentralized identity (DID) systems that enables the secure and efficient exchange of verifiable credentials between different parties.
the Assigned Credential API is a key component of decentralized identity systems, enabling users to securely and efficiently share their verifiable credentials with third parties in a trusted and decentralized manner.


```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/credential/GetAssignedCredential' \
--header 'Content-Type: application/json' \
--data '{
  "walletId":104,
  "pageNumber":1,
  "pageSize":10,
  "filter":""
}'
```

```http
POST https://api.did.kloudlearn.com/api/v1/credential/GetAssignedCredential HTTP/1.1
```

```json
{
  "walletId":104,
  "pageNumber":1,
  "pageSize":10,
  "filter":""
}
```
### Access Token
Authorization Key Required 

### HTTP Request
`POST https://api.did.kloudlearn.com/api/v1/credential/GetAssignedCredential HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | -----------
walletId | This refers to the company or organization which the user is part of.
pageNumber | The pageNumber is used to specify the page number of results to retrieve when querying for DIDs. 
pageSize | The pageSize specifies the number of search results to be returned per page.
filter | The filter is the search parameter.


```json
{
  "code": 200,
  "message": "Credential List Success",
  "status": "Success",
  "walletId": 104,
  "count": 1,
  "credentials": [
    {
      "id": 89,
      "issuerId": 128,
      "issuerName": "test2",
      "schemaId": 2,
      "schemaName": "Password",
      "issuedAt": "2023-03-02T07:09:06Z",
      "credentialId": "100512df-84ca-4434-970d-af57435ad3b0",
      "expireDate": "2024-01-01T00:00:00Z",
      "name": "Credential",
      "status": "Assigned"
    }
  ]
}
```

### HTTP Response
` Credential  Assigned succesfully`



## Accepted Credential 
The Accepted Credential API is a programming interface that is used in the context of decentralized identities (DIDs) to enable the exchange of verifiable credentials between different parties.

The Accepted Credential API allows a DID controller to accept or reject incoming credential requests, manage the storage and presentation of their own verifiable credentials, and control the disclosure of specific credentials to third parties. This API provides a standardized way for developers to build applications that support interoperability between different DID systems, making it easier for users to manage and share their digital identities securely.

```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/credential/GetAcceptedCredential' \
--header 'Content-Type: application/json' \
--data '{
  "walletId":104,
  "pageNumber":1,
  "pageSize":10,
  "filter":""
}'
```

```http
POST https://api.did.kloudlearn.com/api/v1/credential/GetAcceptedCredential HTTP/1.1
```

```json
{
  "walletId":104,
  "pageNumber":1,
  "pageSize":10,
  "filter":""
}
```
### Access Token
Authorization Key Required 

### HTTP Request
`POST https://api.did.kloudlearn.com/api/v1/credential/GetAcceptedCredential HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | -----------
walletId | This refers to the company or organization which the user is part of.
pageNumber | The pageNumber is used to specify the page number of results to retrieve when querying for DIDs. 
pageSize | The pageSize specifies the number of search results to be returned per page.
filter | The filter is the search parameter.


```json
{
  "code": 200,
  "message": "Credential List Success",
  "status": "Success",
  "walletId": 104,
  "count": 1,
  "credentials": [
    {
      "id": 110,
      "issuerId": 126,
      "issuerName": "Broadcom",
      "schemaId": 2,
      "schemaName": "Password",
      "issuedAt": "2023-03-06T11:07:54Z",
      "credentialId": "87a455bd-09a6-46bd-86b1-0aae40cb63d9",
      "expireDate": "2024-01-01T00:00:00Z",
      "name": "Credential",
      "status": "Assigned"
    }
  ]
}
```

### HTTP Response
` Credential  Accepted succesfully`


## Ignored Credential 
The Ignored Credential API is a feature of decentralized identity systems that allows users to selectively ignore or hide certain credentials associated with their digital identity.

By using the Ignored Credential API, users can specify which credentials they want to exclude from their digital identity when presenting it to others. This can help to protect their privacy and reduce the amount of personal information they need to share in certain situations.

Decentralized identity systems are designed to give users more control over their personal data and provide a more secure and transparent way of managing digital identities. The Ignored Credential API is one example of how these systems can be customized to meet the specific needs and preferences of individual users.

```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/credential/GetIgnoredCredential' \
--header 'Content-Type: application/json' \
--data '{
  "walletId":104,
  "pageNumber":1,
  "pageSize":10,
  "filter":""
}'
```

```http
POST https://api.did.kloudlearn.com/api/v1/credential/GetIgnoredCredential HTTP/1.1
```

```json
{
  "walletId":104,
  "pageNumber":1,
  "pageSize":10,
  "filter":""
}
```
### Access Token
Authorization Key Required 

### HTTP Request
`POST https://api.did.kloudlearn.com/api/v1/credential/GetIgnoredCredential HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | -----------
walletId | This refers to the company or organization which the user is part of.
pageNumber | The pageNumber is used to specify the page number of results to retrieve when querying for DIDs. 
pageSize | The pageSize specifies the number of search results to be returned per page.
filter | The filter is the search parameter.


```json
{
  "code": 200,
  "message": "Credential List Success",
  "status": "Success",
  "walletId": 104,
  "count": 1,
  "credentials": [
    {
      "id": 109,
      "issuerId": 126,
      "issuerName": "Broadcom",
      "schemaId": 2,
      "schemaName": "Password",
      "issuedAt": "2023-03-06T10:34:36Z",
      "credentialId": "821fe335-51d8-4f15-ae33-a0da55c15707",
      "expireDate": "2024-01-01T00:00:00Z",
      "name": "Test",
      "status": "Assigned"
    }
  ]
}
```

### HTTP Response
` Credential  Ignored succesfully`


## Credential Schema List
The Credential Schema List API in Decentralized Identities (DIDs) enables users to access and retrieve a list of available verifiable credential schemas published on a decentralized network. The API allows users to search and filter the list based on their specific needs and requirements, enabling them to create and manage verifiable credentials in a secure, transparent, and interoperable manner.


```http
POST /api/v1/credential/credentialSchemaList HTTP/1.1
```

```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/credential/credentialSchemaList'  \
--header 'Content-Type: application/json' \
--data '{
   "domainId": 1,
   "issuerDid": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
}'
```

```json
{
   "domainId": 1,
   "issuerDid": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
}
```

### Access Token
Authorization Key Required 


### HTTP Request
`POST /api/v1/credential/credentialSchemaList HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | ----------- 
domainId |This refers to the company or organization which the user is part of. 
issuerDID      |The issuerDid is a required field used to identify the decentralized identity issuer and verify the authenticity of the credentials associated with the identity.

```json
[
    {
        "id": 1,
        "name": "SSH"
    }
]
```

### HTTP Response
`Successfully Listed Credential Schema List`








## Wallet User List
The Wallet User List API is a feature in decentralized identity systems that allows users to retrieve a list of their identities or DIDs (decentralized identifiers) from their digital wallets. This API enables users to manage their digital identities across different applications and services from a single location, providing greater convenience and control over their personal data. By using this API, developers can create applications that support decentralized identities and enable users to seamlessly switch between identities without the need for multiple logins or authentication processes.


```http
POST /api/v1/wallet/users HTTP/1.1
```

```shell
curl -X POST \
  'https://api.did.kloudlearn.com/api/v1/walletService/walletUserList' \
  --header 'Accept: */*' \
  --header 'User-Agent: Thunder Client (https://www.thunderclient.com)' \
  --header 'Content-Type: application/json' \
  --data-raw '{
  "domainId": 1,
  "pageNumber": 1,
  "pageSize": 2,
  "filter": ""
}'
```

```json
{
  "domainId": 1,
  "pageNumber": 1,
  "pageSize": 2,
  "filter": ""
}
```

### Access Token
Authorization Key Required 


### HTTP Request
`POST /api/v1/wallet/users HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | ----------- 
domainId |This refers to the company or organization who is using the service.
pageNumber | The pageNumber is used to specify the page number of results to retrieve when querying for DIDs. 
pageSize | The pageSize specifies the number of search results to be returned per page.
filter | The filter is the search parameter.


```json
{
  "code": 200,
  "message": "Successfully retrieved waller users",
  "count": 34,
  "status": "Success",
  "users": [
    {
      "walletId": 43,
      "userId": 111,
      "walletUrl": "wallet.brcm.connect.com",
      "status": "Registered",
      "username": "Hemalatha",
      "emailAddress": "hr@gmail.com",
      "noOfcredential": 3
    },
    {
      "walletId": 44,
      "userId": 112,
      "walletUrl": "wallet.brcm.connect.com",
      "status": "Registered",
      "username": "Hemalatha",
      "emailAddress": "hem@gmail.com",
      "noOfcredential": 2
    }
  ]
}
```

### HTTP Response
`Successfully Listed wallet user`




## Get Credential
The Get Credential API is a feature in decentralized identity systems that allows developers to retrieve verifiable credentials issued to a specific user or decentralized identifier (DID). Verifiable credentials are digital documents that contain information about a person, organization, or thing that can be verified by third-party services. This API enables developers to build applications that support decentralized identities and enable users to manage and share their verifiable credentials across different services and applications. By using this API, developers can ensure that only authorized users are able to access and share their verifiable credentials, thereby enhancing the security and privacy of their services.


```http
POST /api/v1/credential/GetCredential HTTP/1.1
```

```shell
curl --location 'https://api.did.kloudlearn.com/api/v1/credential/GetCredential'  \
--header 'Content-Type: application/json' \
--data '{
   "credentialId": "430d2578-4382-4e74-a8b6-af7c1a960100"
 }'
```

```json
{
   "credentialId": "430d2578-4382-4e74-a8b6-af7c1a960100"
 }
```

### Access Token
Authorization Key Required 


### HTTP Request
`POST /api/v1/credential/GetCredential HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | ----------- 
credentialId |The credentialId specifies the unique identifier associated with a verifiable credential, allowing for easy retrieval and management of verifiable credentials within a decentralized identity ecosystem.



```json
{
    "id": "430d2578-4382-4e74-a8b6-af7c1a960100",
    "credential": {
      "@context": [
        "https://www.w3.org/2018/credentials/v1"
      ],
      "id": "430d2578-4382-4e74-a8b6-af7c1a960100",
      "type": [
        "VerifiableCredential"
      ],
      "issuer": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "issuanceDate": "2023-02-16T12:02:53Z",
      "expirationDate": "2051-10-05T14:48:00.000Z",
      "credentialSubject": {
        "id": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "password": "XXXXXXXX"
      },
      "credentialSchema": {
        "id": "a36d9717-65a1-4b6b-bd80-0bbffd7d82d3",
        "type": "JsonSchemaValidator2018"
      }
    }
  }
```

### HTTP Response
`Successfully Credential displayed`

## Assign Wallet User
The Wallet User API in Decentralized Identities (DIDs) is an interface that allows users to manage their decentralized identity credentials, such as public keys and attestations, through a digital wallet. It enables users to securely store and manage their identity information while maintaining full control over their data. With the Wallet User API, users can easily authenticate and authorize themselves for various digital services and applications without relying on traditional centralized identity providers.


```http
POST /api/v1/walletService/assignWalletUser HTTP/1.1
```

```shell
curl --location 'https://api.did.kloudlearn.com/api/v1/walletService/assignWalletUser'  \
--header 'Content-Type: application/json' \
--data '{
  "walletId": 1,
  "userId": 104,
  "credentialId": 10
}'
```

```json
{
  "walletId": 1,
  "userId": 104,
  "credentialId": 10
}
```

### Access Token
Authorization Key Required 


### HTTP Request
`POST /api/v1/walletService/assignWalletUser HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | ----------- 
walletId |The walletId parameter in the API of Decentralized Identities refers to the unique identifier of a digital wallet that holds a users decentralized identities, verifiable credentials, and other related data.
userId |  The userId specifies the unique identifier associated with a user, enabling secure authentication and authorization of data exchange and access within a decentralized identity ecosystem.
credentialId | The credentialId specifies the unique identifier associated with a verifiable credential, allowing for easy retrieval and management of verifiable credentials within a decentralized identity ecosystem.



```json
{
  "code": 200,
  "message": "Successfully Assigned Wallet",
  "status": "Success"
}
```

### HTTP Response
`Successfully Assigned Wallet`


