# Decentralized Identities
Decentralized identities (DIDs) are a type of digital identity that is not controlled by any central authority or organization. Instead, DIDs are created and managed by the individual user, giving them greater control and ownership over their personal data and online presence.

DIDs are typically based on blockchain technology, which provides a secure and transparent way to store and manage identity information. Each DID is assigned a unique identifier, which can be used to authenticate and verify the identity of the user in a variety of contexts, such as logging into websites, accessing financial services, or participating in online communities.

One of the key benefits of DIDs is that they allow individuals to maintain their privacy and control over their personal data. Instead of relying on centralized databases or third-party identity providers, DIDs are stored locally on the users device and can be selectively shared with others as needed. This enables users to share only the information that is necessary, without revealing unnecessary or sensitive details.

DIDs are also designed to be interoperable, meaning that they can be used across different platforms and applications. This enables users to maintain a consistent identity across different services, without having to create and manage multiple accounts or identities.

Overall, DIDs represent a promising new approach to digital identity management that prioritizes user control and privacy. As the technology continues to evolve, it has the potential to transform the way that individuals interact with the digital world, enabling greater security, privacy, and trust in online interactions.

## Create DID for Issuer
Verifiable credentials are a form of digital identity that allows individuals and organizations to securely and selectively share information about themselves. By creating an Issuer DID, an entity can establish a trusted identity on a decentralized network, and issue verifiable credentials that can be cryptographically verified by third parties.

```http
https://api.did.kloudlearn.com/api/v1/did/createIssuerDid
```

```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/did/createIssuerDid'  \
--header 'Content-Type: application/json' \
--data '{
  "method": "key",
  "domainId": 1,
   "name":  "Authnull"
}'
```

```json
{
  "domainId": 1,
  "method": "web" 
}

```

### Access Token
Authorization Key Required 

### HTTP Request
`https://api.did.kloudlearn.com/api/v1/did/createIssuerDid`

### Query Parameters
Parameter | Description
--------- | -----------
method    |This refers to the specific DID method that will be used to create the DID. A DID method is a set of rules and specifications that govern how a DID is created, stored, and used. There are many different DID methods available, each with its own unique features and requirements. 
domainId |This refers to the company or organization who is using the service.


```json
{

“did spec“

}

```

### HTTP Response
`Successfully created DID`

## Create DID for Holder
A Holder DID is a Decentralized Identifier (DID) that is used by an user to store and control their own verifiable credentials.


```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/did/createHolderDid'  \
--header 'Content-Type: application/json' \
--data '{
  "method": "key",
  "domainId": 1 ,
  "userId" : 104,
  "issuerDid" : "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
}'
```

```http
POST /api/v1/did/createHolderDid HTTP/1.1
```
```json
{
  "domainId": 1,
  "method": "bcm",
  "userId": 123,
  "issuerDid": "did:web:xxxxx" 
}

```
### Access Token
Authorization Key Required 

### HTTP Request
`POST /api/v1/did/createHolderDid HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | -----------
 method   |This refers to the specific DID method that will be used to create the DID. A DID method is a set of rules and specifications that govern how a DID is created, stored, and used. There are many different DID methods available, each with its own unique features and requirements.  
domainId |This refers to the company or organization which the user is part of. 
userId   |This refers to the unique ID of the user. 
issuerDid | The issuerDid is a required field used to identify the decentralized identity issuer and verify the authenticity of the credentials associated with the identity.

```json
{

“did spec“

}

```

### HTTP Response
`Successfully created DID`

## Create Credential Definition


### Create Schema List
The Create Schema List API in Decentralized Identities (DIDs) enables issuers to create and manage a list of verifiable credential schemas that can be used to define the structure and rules for different types of credentials. The API allows issuers to define the attributes and format of each schema, and publish the list to a decentralized network, making it available for use by other participants in the ecosystem 

```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/schema/createSchema' \
--header 'Content-Type: application/json' \
--data '{
   "domainId": 1,
   "issuerDid": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
}
'
```

```http
POST /api/v1/schema/createSchema HTTP/1.1
```

```json
{
  "author": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", 
  "name": "EPM User",
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "description": "EPM User Schema",
    "type": "object",
    "properties": {
      "userId": {
        "type": "number"
      },
      "name": {
        "type": "string"
      }
    },
    "additionalProperties": false
  },
  "sign": false
}

```

### Access Token
Authorization Key Required 

### HTTP Request
`POST /api/v1/schema/createSchema HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | -----------
author  | The author is used to identify the entity or individual who created the decentralized identity credentials or the verifiable presentation request.
name | The name is used to specify a user-friendly name or label for the decentralized identity credentials, making them easier to manage and identify.
schema | The schema is a required field used to define the data structure and format of the verifiable credential or presentation, ensuring interoperability and standardization across different identity systems.
description | The description allows developers to provide additional information and context about the data being shared or requested within a decentralized identity ecosystem.
type | The type  specifies the type of data being shared or requested within a decentralized identity ecosystem, such as a public key or verifiable credential. 
properties | The properties allows developers to define additional metadata or attributes about the data being shared or requested within a decentralized identity ecosystem, such as the issuer or expiration date of a verifiable credential. 
userId | The userId specifies the unique identifier associated with a decentralized identity and is typically used to authenticate and authorize access to specific resources or data.
additionalProperties | The additionalProperties allows developers to define custom or non-standard properties and values for the data being shared or requested within a decentralized identity ecosystem.
sign | The sign is used to sign data with a private key associated with a decentralized identity, providing proof of ownership and enabling secure data exchange within a decentralized identity ecosystem.

```json
{
    "id": "d97534d3-260c-4341-b578-e033dcf3bb99",
    "Schema": {
        "type": "https://w3c-ccg.github.io/vc-json-schemas/schema/2.0/schema.json",
        "version": "1.0",
        "id": "d97534d3-260c-4341-b578-e033dcf3bb99",
        "name": "EPM User",
        "author": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "authored": "2023-02-28T15:34:42Z",
        "Schema": {
            "$id": "d97534d3-260c-4341-b578-e033dcf3bb99",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "additionalProperties": false,
            "description": "EPM User Schema",
            "properties": {
                "name": {
                    "type": "string"
                },
                "userId": {
                    "type": "number"
                }
            },
            "type": "object"
        }
    }
}
```

### HTTP Response
`Schema List created`


## Create Verifiable Credential
Verifiable Credentials (VCs) are digital credentials that contain information about a person or entity, which can be verified by others. A Decentralized Identifier (DID) is a unique identifier that allows individuals or organizations to control their own digital identity. Combining these two technologies, a Verifiable Credential DID is a digital credential that is associated with a DID, allowing for secure and decentralized verification of the credentials authenticity and ownership

```shell
curl --location --request POST 'https://api.authnull.kloudlearn.com/api/v1/issueVerifiableCredential'  \
--header 'Content-Type: application/json' \
--data '{
	"domainId" : 1,
    "issuerDid" : "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
	"holderDid" : "did:key:xxxxxxxxxxxxxxxxxxxxxxxxx",
    "schemaId" : 2,
    "metadata" : "password"
}'
```

```http
POST /api/v1/credential/createCredential HTTP/1.1
```

```json
{
	"domainId" : 1,
    "issuerDid" : "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
	"holderDid" : "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
    "schemaId" : 2,
    "metadata" : "password"
}
```
### Access Token
Authorization Key Required 

### HTTP Request
`POST /api/v1/credential/createCredential HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | -----------
domainId | This refers to the company or organization who is issuing the VC or Verifiable Credential. 
issuerDid | The issuerDid is a required field used to identify the decentralized identity issuer and verify the authenticity of the credentials associated with the identity.
holderDid |The holderDid is a required field used to identify the holder of the decentralized identity credentials being used for authentication or authorization purposes.
schemaId | It refers to the schema used to create the verifiable credential.
metadata | These are the set of properties or claims.
 

 ```json
 {
    "code": 200,
    "message": "Credential Assigned successfully",
    "status": "SUCCESS"
}
```

### HTTP Response
`Credential Assigned successfully`

## Assign Credential to wallet
The Assign Credential to Wallet API in Decentralized Identities (DIDs) enables users to securely store and manage their verifiable credentials in a decentralized wallet. This API allows users to request, receive and store verifiable credentials issued by trusted issuers, providing them with greater control and ownership over their personal data.

```shell
curl --location 'https://api.did.kloudlearn.com/api/v1/walletService/assignWalletUser' \
--header 'Content-Type: application/json' \
--data '{
  "walletId":[1],
  "userId": [104],
  "credentialId": [10]
}'
```

```http
POST /api/v1/walletService/assignWalletUser HTTP/1.1
```

```json
{
  "walletId":[1],
  "userId": [104],
  "credentialId": [10]
}

```
### Access Token
Authorization Key Required 

### HTTP Request
`POST /api/v1/walletService/assignWalletUser HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | -----------
walletId | The walletId  is an optional field used to specify the unique identifier of the digital wallet containing the users decentralized identity credentials.
userId | The userId specifies the unique identifier associated with a decentralized identity and is typically used to authenticate and authorize access to specific resources or data.
credentialId |  The credentialId specifies the unique identifier associated with a verifiable credential, allowing for easy retrieval and management of verifiable credentials within a decentralized identity ecosystem.
```json
{
    "code": 200,
    "message": "Successfully Assigned Wallet",
    "status": "Success"
}
```

### HTTP Response
`Presentation Request raised Successfully`

### Access Token
Authorization Key Required 

## Issue Presentation Request
The Issue Presentation Request API in Decentralized Identities (DIDs) enables verifiers to request specific verifiable credentials from holders in a secure and decentralized manner. The API allows verifiers to specify the attributes they require and issue a presentation request to the holder, who can then choose which credentials to present without revealing unnecessary or sensitive information.

```shell
curl POST https://api.did.kloudlearn.com/api/v1/verifierService/issuePR
```

```http
POST /api/v1/verifierService/issuePR HTTP/1.1
```

```json
{
    "username": "john",
    "issuerDid": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
    "holderDid": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
    "walletUrl": "http://authnull.com/walletservice/wallets/1",
    "endpoint": "ubuntuVm",
    "grouop": "R&D and Engineering"
}

```
### Access Token
Authorization Key Required 

### HTTP Request
`POST /api/v1/verifierService/issuePR HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | -----------
username  | The username is an optional field used to associate a user-friendly identifier with a decentralized identity, making it easier for users to manage their digital identities.
issuerDid | The issuerDid is a required field used to identify the decentralized identity issuer and verify the authenticity of the credentials associated with the identity.
holderDid | The holderDid is a required field used to identify the holder of the decentralized identity credentials being used for authentication or authorization purposes.
walletUrl | The walletUrl is an optional field used to specify the URL location of the digital wallet containing the users decentralized identity credentials.
endpoint | The endpoint is a required field used to specify the network endpoint for communicating with the decentralized identity infrastructure.
groupop |The groupop is an optional field used to specify the group operation to be performed, such as creating a new group or adding/removing members from an existing group.

```json
{
    "presentationRequestId": 7,
    "message": "PR Raised Successfully",
    "status": "Success",
    "code": 200
}
```

### HTTP Response
`Presentation Request raised Successfully`


## Submit Presentation Response
The Submit Presentation Response API in Decentralized Identities (DIDs) enables holders to respond to presentation requests from verifiers by submitting a verifiable presentation that meets the requested criteria. The API allows holders to selectively disclose only the information that is necessary, while maintaining control and ownership over their personal data.

```shell
curl POST https://api.did.kloudlearn.com/api/v1/walletService/submitPresentationResponse
```

```http
POST /api/v1/walletService/submitPresentationResponse HTTP/1.1
```

```json
{
    "walletId": 1,
    "presentationRequestId": 1,
    "presentationSubmissionBytes": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2Nzc3NjcxNjgsImlhdCI6MTY3Nzc2Njg2OCwidnAiOnsiQGNvbnRleHQiOlsiaHR0cHM6Ly93d3cudzMub3JnLzIwMTgvY3JlZGVudGlhbHMvdjEiXSwidHlwZSI6IlZlcmlmaWFibGVQcmVzZW50YXRpb24iLCJ2ZXJpZmlhYmxlQ3JlZGVudGlhbCI6W3siQGNvbnRleHQiOlsiaHR0cHM6Ly93d3cudzMub3JnLzIwMTgvY3JlZGVudGlhbHMvdjEiXSwidHlwZSI6WyJWZXJpZmlhYmxlQ3JlZGVudGlhbCIsIlVuaXZlcnNpdHlEZWdyZWVDcmVkZW50aWFsIl0sImlzc3VlciI6ImRpZDpleGFtcGxlOjEyMyJ9XSwiaG9sZGVyIjoiZGlkOmV4YW1wbGU6NDU2In19.ayUHgpgzQs3dHvgETyHFgC4rFx_oEg"
}

```
### Access Token
Authorization Key Required 

### HTTP Request
`POST /api/v1/walletService/submitPresentationResponse HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | -----------
walletId | The walletId  is an optional field used to specify the unique identifier of the digital wallet containing the users decentralized identity credentials.
presentationRequestId | The presentationRequestId is a required field used to identify the request for a verifiable credential presentation, allowing the holder of the credential to provide the necessary proof of identity for authentication or authorization purposes.
presentationSubmissionBytes | The presentationSubmissionBytes is an optional field used to specify the verifiable credential presentation data in a serialized format, which can be used to verify the authenticity and validity of the presented credentials.

```json
{
    "code": 200,
    "status": "Success",
    "message": "Successfully submitted presentation response"
}
```

### HTTP Response
`Successfully submitted presentation response`



## Create Schema List
The Create Schema List API in Decentralized Identities (DIDs) enables issuers to create and manage a list of verifiable credential schemas that can be used to define the structure and rules for different types of credentials. The API allows issuers to define the attributes and format of each schema, and publish the list to a decentralized network, making it available for use by other participants in the ecosystem 

```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/schema/createSchema
```

```http
POST /api/v1/schema/createSchema HTTP/1.1
```

```json
{
  "author": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", 
  "name": "EPM User",
  "schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "description": "EPM User Schema",
    "type": "object",
    "properties": {
      "userId": {
        "type": "number"
      },
      "name": {
        "type": "string"
      }
    },
    "additionalProperties": false
  },
  "sign": false
}

```
### Access Token
Authorization Key Required 

### HTTP Request
`POST /api/v1/schema/createSchema HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | -----------
author  | The author is used to identify the entity or individual who created the decentralized identity credentials or the verifiable presentation request.
name | The name is used to specify a user-friendly name or label for the decentralized identity credentials, making them easier to manage and identify.
schema | The schema is a required field used to define the data structure and format of the verifiable credential or presentation, ensuring interoperability and standardization across different identity systems.
description | The description allows developers to provide additional information and context about the data being shared or requested within a decentralized identity ecosystem.
type | The type  specifies the type of data being shared or requested within a decentralized identity ecosystem, such as a public key or verifiable credential. 
properties | The properties allows developers to define additional metadata or attributes about the data being shared or requested within a decentralized identity ecosystem, such as the issuer or expiration date of a verifiable credential. 
userId | The userId specifies the unique identifier associated with a decentralized identity and is typically used to authenticate and authorize access to specific resources or data.
additionalProperties | The additionalProperties allows developers to define custom or non-standard properties and values for the data being shared or requested within a decentralized identity ecosystem.
sign | The sign is used to sign data with a private key associated with a decentralized identity, providing proof of ownership and enabling secure data exchange within a decentralized identity ecosystem.

```json
{
    "id": "d97534d3-260c-4341-b578-e033dcf3bb99",
    "Schema": {
        "type": "https://w3c-ccg.github.io/vc-json-schemas/schema/2.0/schema.json",
        "version": "1.0",
        "id": "d97534d3-260c-4341-b578-e033dcf3bb99",
        "name": "EPM User",
        "author": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "authored": "2023-02-28T15:34:42Z",
        "Schema": {
            "$id": "d97534d3-260c-4341-b578-e033dcf3bb99",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "additionalProperties": false,
            "description": "EPM User Schema",
            "properties": {
                "name": {
                    "type": "string"
                },
                "userId": {
                    "type": "number"
                }
            },
            "type": "object"
        }
    }
}
```

### HTTP Response
`Schema List created`


## Credential Schema List 
The Credential Schema List API in Decentralized Identities (DIDs) enables users to access and retrieve a list of available verifiable credential schemas published on a decentralized network. The API allows users to search and filter the list based on their specific needs and requirements, enabling them to create and manage verifiable credentials in a secure, transparent, and interoperable manner.

```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/credential' \
--header 'Content-Type: application/json' \
--data '{
   "domainId": 1,
   "issuerDid": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
}
'
```

```http
POST /api/v1/credential/credentialSchemaList HTTP/1.1
```

```json
{
   "domainId": 1,
   "issuerDid": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
}

```

### Access Token
Authorization Key Required 


### HTTP Request
`POST /api/v1/credential/credentialSchemaList HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | -----------
domainId  | This refers to the company or organization which the user is part of. 
issuerDID |The issuerDid is a required field used to identify the decentralized identity issuer and verify the authenticity of the credentials associated with the identity.

```json
[
    {
        "id": 1,
        "name": "SSH"
    }
]
```

### HTTP Response
`Credential Schema Listed`

##  Poll Credentials 
The Credential Schema List API in Decentralized Identities (DIDs) enables users to access and retrieve a list of available verifiable credential schemas published on a decentralized network. The API allows users to search and filter the list based on their specific needs and requirements, enabling them to create and manage verifiable credentials in a secure, transparent, and interoperable manner.

```shell
curl --location --request POST 'https://api/v1/walletService/pollCredentials' \
--header 'Content-Type: application/json' \
--data '{
  "email": "john@kloudone.com",
  "walletKey": "xxx-xxx-xxx-xxx"
}
'
```

```http
POST /api/v1/walletService/pollCredentials HTTP/1.1
```

```json
{
  "email": "john@kloudone.com",
  "walletKey": "xxx-xxx-xxx-xxx"
}

```

### Access Token
Authorization Key Required 


### HTTP Request
`POST /api/v1/walletService/pollCredentials HTTP/1.1`

### Query Parameters

Parameter | Description
--------- | -----------
email | The email  refers to the email address associated with a decentralized identity, which can be used to verify and authenticate a users identity across various services and platforms.
walletKey | The walletKey parameter in API of Decentralized Identities (DIDs) is a private key used to sign and authenticate DID transactions and operations within a decentralized network.


```json
{
  "code": 200,
  "status": "success",
  "message": "Retrived Credential Sucessfully",
  "email": "john@kloudone.com",
  "walletKey": "xxx-xxx-xxx-xxx",
  "credentials": [
    {
      "credentialId": 99,
      "credentialName": "Credential",
      "issuerName": "Broadcom",
      "issuerDid": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "userDid": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "jwt": "FWHQGjstawCugyKQPI0Q3QdSkEGJ3UIMydMnnjDxflAa+iNm+UyvqOf8ALMCby2OZ5HeC9Msh8uciNpzCXOeB5HxaXl1ZU3+I00oRqli+nwMRNUOj4ks8qaXXj5hpvMl2TwuX5MfBNYCeULHRz1HtV77Cn60ofzwVtZoI1so5X5c/xhalvnfqWansnswR1fC3ZNcXHRpY0Mm97PLUoCcVl6wuy3e8fmJGN2JvgvP2bRVubfqtDxLuDKnyJ6TwOZCIle8Lbmmfr2wXN8CfxxRlsuGdFHQ75Mhjbhe9H0ABmFClDgnJj4FaU2kTfpJTK5sBUgEekIxw2R4vCu8leeT0PI+UR68jARt6A2Tz3b1yfe1BDm8bU/8tRUd1RBTMELo4jheO2Eo37JJvEDCTT8YGALfkWGpdUYmrhe6RxgCGklE54oisdUOxNuP/U2yU7B72lbiqa6KDiYPUK4s+HfYui0yghdHwNuaFDfePh18na68ztMlfkspLP/jCcWn+vYlN5IQwesXXO0cg5qRSsxMVwvvBrnAQf98vU9yiZK5Ls324KduHCaDS44jy8yLCeMrPTOnypA/khQ0NY7jqvdhJ/XjSCnVJdzNuVkvcirZI64hofnZ4LfVJuNcH2qgjoEJ9vIHdyxodZf1iaXs1yTffUC6h64AViFijBDJPcY2BCGyv+IQgGeqkCRN6nEEWn5304/+7UD8/onG541NYMPmlmDSezKk7JH+8ju61O7NXMAh9vur4tGcjs2/iHDcMTdn80lkIy9mVEXJ8rtH9IbXXNGI11o0+lwHvSUE9D7WaLA0DMgMSXQFasT1GraesYpBm6eu1+TlRYtNTtXxXjD8+F1tbiwQzZ2KXFQtcvwTcLREZM3ZhqgnvNXFJ5XOorSYgl8v8wMGTj3c6P0PlaNfLQOz3O5pvfBn9+abK3xp66n84gpxVxZMcX0CE1fBilJ3vmsoXpN5tUcGjBacP/HIxN8/N1IY6QZw4RIgXq1pCSABHJZjQvMNpp0ghUnX7Nc3w83T01qyJZbkg0YKUivdiG8rniNCzzpHchNR16UkesiKm7IIXexlKI5LXK8FuFN6IqGF5gUvMceYCH6ZGWcQW2nYJH6Upw0DV3CUTIP3eQpSN8jzwJOZtDRXh1WseM/f7guV/2F0g96c2Y1XRp+VGKqbeVQsQPVaZCHLrWH38+nBNh92WwOIHXqVFWNY+g43BKenTjI0d/Neo2jmJeRxefPuSHWpzYQOEjSha3cB5g3DOKrGSQNePFrDd/l3KMPfaR6YWI043tP7k/jLdgJOA8nhRIQA9aUClpahOQJ96Auc0mSVcNpKlB+m4xPgxGWEs6ZXuZpNcEnX5M9BoTQ1Gq4iaJ33f8PzG6iCqyPzV9rh6ALzsIaZ4o1C/scLaGD1zSaSNQZH2HAB0Kxuf67vHgnpajNrzBB7TZLSz/ah23zLohTeHfE1I757WluxGbJGNkSEqe0v75sX5RtlZn8SvEZeL+EEf/A3p8HmITnA39cemeBnD6zoQtrmY87/XFDlPf7RJZD6vz8dCah90rCI21vt07KnTKSNuTESkiCedv91bYW+ZBABSFJGA6tc1NhMkmusAqrePqaDWX/7fLcicl5Yzn48G7g0nDsUMdxkmGOAhCgIY07Z+RMa2woFiTRBnSe5arGGxH2wwkWfmHg3MUu+iZDtWOtABHX0xpLA2TXRLarOnXR6hhp69fKTlg78rF6j3FW//8Rh6fEGMKoRRV/4kI+nP9nkTZbux8kKL5goJ5GlcZ0WQ83ESUqivi50n8PnxtP/l3FPj94bIuJI3RMQM3GefNrkZw==",
      "createdAt": "2023-03-03T06:23:31Z"
    }
  ]
}
```

### HTTP Response
`Credential Schema Listed`

## Acknowledge Credential 
The acknowledge credential API is an essential component of decentralized identity (DID) systems. It is a programming interface that enables a user to acknowledge or verify a digital credential issued by another party.This API is critical in ensuring the integrity and trustworthiness of digital credentials, as it enables users to verify the authenticity and validity of a credential before accepting it. Moreover, it provides users with control over their personal information by allowing them to disclose only the information necessary to prove their qualifications or identity.
```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/walletService/acknowledgeCredential' \
--header 'Content-Type: application/json' \
--data '{
  "walletId": 1,
  "userId": 104,
  "credentialId": 10,
  "accept": true
}'
```

```http
POST /api/v1/walletService/acknowledgeCredential HTTP/1.1
```
```json
{
  "walletId": 1,
  "userId": 104,
  "credentialId": 10,
  "accept": true
}
```

### Access Token
Authorization Key Required 


### HTTP Request
`POST https://api.authnull.kloudlearn.com/api/v1/walletService/acknowledgeCredential HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | -----------
walletId | The walletId parameter in the API of Decentralized Identities refers to the unique identifier of a digital wallet that holds a users decentralized identities, verifiable credentials, and other related data.
userId | The userId specifies the unique identifier associated with a user, enabling secure authentication and authorization of data exchange and access within a decentralized identity ecosystem. 
credentialId | The credentialId specifies the unique identifier associated with a verifiable credential, allowing for easy retrieval and management of verifiable credentials within a decentralized identity ecosystem.
accept | The accept is used to indicate the acceptance of a credential presented by the holder.


```json
{
  "code": 200,
  "status": "Success",
  "message": "Credential Accepted"
}
```

### HTTP Response
`Credential Accepted`


## Poll Presentation Request 
The acknowledge credential API is an essential component of decentralized identity (DID) systems. It is a programming interface that enables a user to acknowledge or verify a digital credential issued by another party.This API is critical in ensuring the integrity and trustworthiness of digital credentials, as it enables users to verify the authenticity and validity of a credential before accepting it. Moreover, it provides users with control over their personal information by allowing them to disclose only the information necessary to prove their qualifications or identity.
```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/walletService/pollPresentationRequest' \
--header 'Content-Type: application/json' \
--data '{
  "walletId": 1,
  "walletKey": "abcxyz",
  "holderDid": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
}'
```

```http
POST api/v1/walletService/pollPresentationRequest HTTP/1.1
```
```json
{
  "walletId": 1,
  "walletKey": "abcxyz",
  "holderDid": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
}
```

### Access Token
Authorization Key Required 


### HTTP Request
`POST https://api.authnull.kloudlearn.com/api/v1/walletService/pollPresentationRequest HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | -----------
walletId | The walletId parameter in the API of Decentralized Identities refers to the unique identifier of a digital wallet that holds a users decentralized identities, verifiable credentials, and other related data.
walletKey | The walletKey is a private key used to sign and authenticate DID transactions and operations within a decentralized network.
holderDid | The holderDid is a required field used to identify the holder of the decentralized identity credentials being used for authentication or authorization purposes.


```json
{
  "id": "e8ffeca4-62e0-47e0-8751-4fa353b8f139",
  "input_descriptors": [
    {
      "id": "epmUser",
      "name": "EPM User Verifiable Credential",
      "purpose": "The EPM User VC allows to access to Linux Endpoints.",
      "format": {
        "jwt_vc": {
          "alg": [
            "EdDSA"
          ]
        }
      },
      "constraints": {
        "fields": [
          {
            "id": "epmUsername",
            "path": [
              "$.credentialSubject.epmUsername"
            ]
          },
          {
            "id": "epmPassword",
            "path": [
              "$.credentialSubject.epmPassword"
            ]
          },
          {
            "id": "holderDID",
            "path": [
              "$.credentialSubject.holderDID"
            ]
          },
          {
            "id": "holderId",
            "path": [
              "$.credentialSubject.holderId"
            ]
          }
        ]
      }
    }
  ]
}
```

### HTTP Response
`Credential Accepted`



## Revoke Credential 
The Revoke Credential API in Decentralized Identities (DIDs) enables issuers to revoke previously issued verifiable credentials in a secure and decentralized manner. The API allows issuers to specify the reason for revocation and publish the revocation status to the decentralized network, ensuring that the revoked credential can no longer be used or presented by the holder.

```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/credential/revokecredential' \
--header 'Content-Type: application/json' \
--data '{
  "vcid": 2,
  "domainId": 2,
  "issuerDid": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
  "holderDid": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
}'
```

```http
POST /api/v1/credential/revokecredential HTTP/1.1
```
```json
{
  "vcid": 2,
  "domainId": 2,
  "issuerDid": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
  "holderDid": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
}
```

### Access Token
Authorization Key Required 


### HTTP Request
`POST https://api.authnull.kloudlearn.com/api/v1/presentationRequest HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | -----------
vcid | The vcid specifies the unique identifier associated with a verifiable credential, allowing for easy retrieval and management of verifiable credentials within a decentralized identity ecosystem.
domainId | This refers to the company or organization which the user is part of. 
issuerDid |The issuerDid is a required field used to identify the decentralized identity issuer and verify the authenticity of the credentials associated with the identity.
holderDid |The holderDid is a required field used to identify the holder of the decentralized identity credentials being used for authentication or authorization purposes.


```json
{
    "Message": "Credential Revoked successfully",
    "Code": 200,
    "Status": "Success"
}
```

### HTTP Response
`Credential Revoked successfully`

## Credential PR 
The Credential PR in Decentralized Identities (DIDs) enables verifiers to request specific verifiable credentials from holders in a secure and decentralized manner. The API allows verifiers to specify the attributes they require and issue a presentation request to the holder, who can then choose which credentials to present without revealing unnecessary or sensitive information.

```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/did/credentialPR'
```

```http
POST /api/v1/did/credentialPR HTTP/1.1
```
```json
{
  "domainId": 1,
  "did": "did:web:xxxxxxx"
  "verifierId": 123
}
```

### Access Token
Authorization Key Required 

### HTTP Request
`POST https://api.authnull.kloudlearn.com/api/v1/did/credentialPR HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | -----------

domainId | This refers to the company or organization which the user is part of. 
did | The did specifies the unique decentralized identifier associated with a decentralized identity, allowing for authentication and authorization of data exchange and access within a decentralized identity ecosystem.
verifierId | The verifierId specifies the unique identifier associated with a verifier, allowing for verification and validation of verifiable credentials and other data within a decentralized identity ecosystem.


```json
{
  credential spec
}
```

### HTTP Response
`Credential PR`


## Credential List
The Credential List API in Decentralized Identities (DIDs) enables users to access and retrieve a list of available verifiable credentials issued to them or stored in their decentralized wallet. The API allows users to search and filter the list based on their specific needs and requirements, providing them with greater control and ownership over their personal data.


```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/credential/credentialList' \
--header 'Content-Type: application/json' \
--data '{
   "domainId": 1
}'
```

```http
POST /api/v1/credential/credentialList HTTP/1.1
```

```json
{
   "domainId": 1
}
```
### Access Token
Authorization Key Required 

### HTTP Request
`POST /api/v1/credential/credentialList HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | -----------
domainId | This refers to the company or organization which the user is part of.

```json
{
    "code": 200,
    "message": "Credential List Success",
    "status": "Success",
    "domainId": 1,
    "credentials": [
        {
            "id": 1,
            "issuerId": 1,
            "schemaId": 1,
            "credentialId": "1",
            "name": "core item",
            "status": "ACTIVE"
        },
        {
            "id": 2,
            "issuerId": 0,
            "schemaId": 2,
            "credentialId": "a74d273c-632e-4830-9d7f-4408f2ea447f",
            "name": "Credential",
            "status": "Assigned"
        },
        {
            "id": 3,
            "issuerId": 0,
            "schemaId": 2,
            "credentialId": "62e78e9b-ac26-4216-a8d9-de400d06a9a6",
            "name": "Credential",
            "status": "Assigned"
        },
        {
            "id": 4,
            "issuerId": 29,
            "schemaId": 2,
            "credentialId": "83567dad-8920-4b1d-bfa0-67082f95b0b5",
            "name": "Credential",
            "status": "Assigned"
        },
        {
            "id": 5,
            "issuerId": 29,
            "schemaId": 2,
            "credentialId": "1a96a91a-209d-47bd-88f6-f4e3f3a121be",
            "name": "Credential",
            "status": "Assigned"
        }
    ]
}
```

### HTTP Response
`succesfully Credential Listed`


## Credential Schema List
The Credential Schema List API in Decentralized Identities (DIDs) enables users to access and retrieve a list of available verifiable credential schemas published on a decentralized network. The API allows users to search and filter the list based on their specific needs and requirements, enabling them to create and manage verifiable credentials in a secure, transparent, and interoperable manner.


```http
POST /api/v1/credential/credentialSchemaList HTTP/1.1
```

```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/credential/credentialSchemaList'  \
--header 'Content-Type: application/json' \
--data '{
   "domainId": 1,
   "issuerDid": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
}'
```

```json
{
   "domainId": 1,
   "issuerDid": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
}
```

### Access Token
Authorization Key Required 


### HTTP Request
`POST /api/v1/credential/credentialSchemaList HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | ----------- 
domainId |This refers to the company or organization who is using the service.
issuerDID      |The issuerDid is a required field used to identify the decentralized identity issuer and verify the authenticity of the credentials associated with the identity.

```json
[
    {
        "id": 1,
        "name": "SSH"
    }
]
```

### HTTP Response
`Successfully Listed Credential Schema List`


## DID List
The DID List API in Decentralized Identities (DIDs) enables users to access and retrieve a list of available Decentralized Identifiers (DIDs) registered on a decentralized network. The API allows users to search and filter the list based on their specific needs and requirements, providing them with a way to discover and connect with other participants in the decentralized identity ecosystem.


```http
POST /api/v1/did/DIDList HTTP/1.1
```

```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/did/DIDList' \
--header 'Content-Type: application/json' \
--data '{
  "domainId": 1,
  "issuerId": 2,
  "userId": 104  
}'
```

```json
{
  "domainId": 1,
  "issuerId": 2,
  "userId": 104  
}
```

### Access Token
Authorization Key Required 

### HTTP Request
`POST /api/v1/did/DIDList HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | ----------- 
domainId |This refers to the company or organization who is using the service.
issuerDID |The issuerDid is a required field used to identify the decentralized identity issuer and verify the authenticity of the credentials associated with the identity.
userId | The userId specifies the unique identifier associated with a user, enabling secure authentication and authorization of data exchange and access within a decentralized identity ecosystem. 

```json
[
    {
        "DIDType": "Issuer",
        "domainId": 1,
        "did": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "issuerName": "Broadcom",
        "credentialIssued": 1,
        "desc": "This a issuer DID",
        "lastYpdatedAt": "02-12-2023 12:12:12"
    },
    {
        "DIDType": "User",
        "domainId": 1,
        "did": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "issuerName": "Broadcom",
        "credentialIssued": 1,
        "desc": "This a User DID",
        "lastYpdatedAt": "02-12-2023 12:12:12"
    },
    {
        "DIDType": "User",
        "domainId": 1,
        "did": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "issuerName": "Broadcom",
        "credentialIssued": 1,
        "desc": "This a User DID",
        "lastYpdatedAt": "02-12-2023 12:12:12"
    },
    {
        "DIDType": "User",
        "domainId": 1,
        "did": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "issuerName": "Broadcom",
        "credentialIssued": 1,
        "desc": "This a User DID",
        "lastYpdatedAt": "02-12-2023 12:12:12"
    }
  ]
    
```

### HTTP Response
`Successfully Listed DID`


## Assign VC
The Assign VC API in Decentralized Identities (DIDs) enables users to securely store and manage their verifiable credentials in a decentralized wallet. This API allows users to request, receive and store verifiable credentials issued by trusted issuers, providing them with greater control and ownership over their personal data.


```http
POST /api/v1/credential/assignVC HTTP/1.1
```

```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/credential/assignVC'  \
--header 'Content-Type: application/json' \
--data '{
  "domainId": 1,
  "issuerDid": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
  "holderDid": "did:brcm:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
  "vcId": 1234
}'
```

```json
{
  "domainId": 1,
  "issuerDid": "did:brcm:dfdasfdasf",
  "userDid": "did:brcm:dfdsafdsfdg",
  "credentialId": "fdsaf-dfdsfdasf-dsfdasf"
  "action": "Assign"
}
```

### Access Token
Authorization Key Required 


### HTTP Request
`POST /api/v1/credential/assignVC HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | ----------- 
domainId |This refers to the company or organization who is using the service.
issuerDID      |The issuerDid is a required field used to identify the decentralized identity issuer and verify the authenticity of the credentials associated with the identity.
userId | The userId specifies the unique identifier associated with a user, enabling secure authentication and authorization of data exchange and access within a decentralized identity ecosystem.
credentialId | The credentialId specifies the unique identifier associated with a verifiable credential, allowing for easy retrieval and management of verifiable credentials within a decentralized identity ecosystem.
action | The action specifies the type of action to be performed within a decentralized identity ecosystem, such as creating or deleting a verifiable credential or requesting data access.


```json
{
  "Code": 200,
  "Message": "Credential Assigned Successfully",
  "Status": "Success"
}
```

### HTTP Response
`Successfully assigned VC`


## Verify VC
The Verify VC API in Decentralized Identities (DIDs) enables verifiers to verify the authenticity and validity of verifiable credentials presented by holders in a secure and decentralized manner. The API allows verifiers to verify the cryptographic proofs and signatures embedded in the verifiable credential, ensuring that it has not been tampered with and was issued by a trusted issuer.


```http
POST /api/v1/did/verifyVerifiableCredential HTTP/1.1
```

```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/did/verifyVerifiableCredential'
```

```json
{
  "domainId": 1,
  "did": "did:web:xxxxx "
  "claims": { Claim Spec}
  "verifier": 23213
}
```
### HTTP Request
`POST /api/v1/did/verifyVerifiableCredential HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | ----------- 
domainId |This refers to the company or organization who is using the service.
did | The did specifies the unique decentralized identifier associated with a decentralized identity, allowing for authentication and authorization of data exchange and access within a decentralized identity ecosystem.
claims | The claims contains the verifiable claims associated with a decentralized identity, providing a secure and tamper-proof way of sharing and verifying personal data within a decentralized identity ecosystem.
verifier | The verifier refers to an entity responsible for verifying and validating the authenticity and accuracy of data within a decentralized identity ecosystem.


```json
{
  "isVerified": true/false
}
```

### Access Token
Authorization Key Required 

### HTTP Response
`Successfully VC verified`


## Sign VC
The Sign VC API in Decentralized Identities (DIDs) enables issuers to digitally sign verifiable credentials using their private key, ensuring the integrity and authenticity of the credential. The API allows issuers to generate a cryptographic proof that links the issuers DID with the verifiable credential, providing a way for verifiers to verify the credential and ensuring that it has not been tampered with.


```http
POST /api/v1/did/signVerifiableCredential HTTP/1.1
```

```shell
curl --location --request POST https://api.did.kloudlearn.com/api/v1/did/signVerifiableCredential
```

```json
{
  "domainId": 1,
  "issuerDid": "did:bcm:xxxxx",
  "holderDid": "did:bcm:yyyyy",
  "vcId": "123"
}
```

### Access Token
Authorization Key Required 


### HTTP Request
`POST /api/v1/did/signVerifiableCredential HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | ----------- 
domainId |This refers to the company or organization who is using the service.
issuerDid |The issuerDid is a required field used to identify the decentralized identity issuer and verify the authenticity of the credentials associated with the identity.
holderDid |The holderDid is a required field used to identify the holder of the decentralized identity credentials being used for authentication or authorization purposes.
vcId | The vcId refers to the unique identifier of a verifiable credential that can be used to verify claims about a person or entity.


```json
{
  "isSigned": true/false
}
```

### HTTP Response
`Successfully VC signed`



## Present VC
The Present VC API in Decentralized Identities (DIDs) enables holders to selectively disclose verifiable credentials to verifiers without revealing any unnecessary or sensitive information. The API allows holders to choose which credentials to present and which attributes to disclose based on the verifiers presentation request. This ensures that holders maintain control and ownership over their personal data while still providing verifiers with the necessary information to make informed decisions.


```http
POST /api/v1/did/presentVerifiableCredential HTTP/1.1
```

```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/did/presentVerifiableCredential'
```

```json
{
  "domainId": 1,
  "walletId": 123,
  "vcDid": "did:bcm:yyyy",
  "verifierId": ""
}
```

### Access Token
Authorization Key Required 

### HTTP Request
`POST /api/v1/did/presentVerifiableCredential HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | ----------- 
domainId |This refers to the company or organization who is using the service.
walletId | The walletId parameter in the API of Decentralized Identities refers to the unique identifier of a digital wallet that holds a users decentralized identities, verifiable credentials, and other related data.
vcDid | The vcDid refers to the unique identifier of a Decentralized Identifier (DID) associated with a verifiable credential, which allows for secure and decentralized identity verification without the need for a central authority.
verifierId | The verifierId refers to the unique identifier of a verifier, who is responsible for verifying the authenticity of a verifiable credential and can be used to access their verification services.


### HTTP Response
`Successfully VC presented`


## VC-Verify-Request
The Verifiable Credential (VC) Verify Request API in Decentralized Identities (DIDs) enables verifiers to request and receive verifiable credentials from holders and verify their authenticity and validity. The API allows verifiers to specify the required credentials and attributes they need to make informed decisions, and holders can choose which credentials to present without revealing unnecessary or sensitive information. This provides a secure and decentralized way to verify a person identity and credentials.


```http
POST /api/v1/did/vcVerifyRequest HTTP/1.1
```

```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/did/vcVerifyRequest'
```

```json
{
  "domainId": 1,
  "verifierId": 2,
  "vcDid": "did:bcm:yyyy"
}
```

### Access Token
Authorization Key Required 


### HTTP Request
`POST /api/v1/did/vcVerifyRequest HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | ----------- 
domainId |This refers to the company or organization who is using the service.
vcDid | The vcDid refers to the unique identifier of a Decentralized Identifier (DID) associated with a verifiable credential, which allows for secure and decentralized identity verification without the need for a central authority.
verifierId |The verifierId refers to the unique identifier of a verifier, who is responsible for verifying the authenticity of a verifiable credential and can be used to access their verification services.


### HTTP Response
`Successfully VC verify request sent`

## Register Wallet
The Register Wallet API in Decentralized Identities (DIDs) enables users to register and create a decentralized wallet to securely store and manage their verifiable credentials and Decentralized Identifiers (DIDs). The API allows users to generate a private key and DID for their wallet, which can be used to authenticate and authorize transactions on the decentralized network.


```http
POST /api/v1/walletService/registerDevice HTTP/1.1
```

```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/walletService/registerDevice'
```

```json
{
  "email": "hussain@kloudone.com",
  "walletKey": "xxxxxxxxxxxxxxxxxxxxxxx"
}
```

### Access Token
Authorization Key Required 


### HTTP Request
`POST /api/v1/walletService/registerDevice HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | ----------- 
email | The email  refers to the email address associated with a decentralized identity, which can be used to verify and authenticate a users identity across various services and platforms.
walletKey | The walletKey is a private key used to sign and authenticate DID transactions and operations within a decentralized network.



```json
{
  "userId": 113,
  "walletId": 63,
  "holderDid": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
  "secretKey": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
  "code": 200,
  "status": "Success",
  "message": "Wallet successfully registered"
}
```

### HTTP Response
` Wallet registered Successfully`


## Get-Credential-json
The Get-Credential-json API is a feature in decentralized identity systems that allows users to retrieve and securely store their credentials in a JSON format. This API enables users to authenticate themselves without revealing their personal information to third-party services, thereby increasing their privacy and security online. By using this API, users can have greater control over their digital identities and how they are used across different applications and services.


```http
POST /api/v1/did/GetCredential HTTP/1.1
```

```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/did/GetCredential'
```

```json
{
  "domainId": 1,
  "credentialId": 100
}
```

### Access Token
Authorization Key Required 


### HTTP Request
`POST /api/v1/did/GetCredential HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | ----------- 
email | The email  refers to the email address associated with a decentralized identity, which can be used to verify and authenticate a users identity across various services and platforms.
walletKey |  The walletKey parameter in API of Decentralized Identities (DIDs) is a private key used to sign and authenticate DID transactions and operations within a decentralized network.



```json
{
  credential spec 
}
```

### HTTP Response
`Credential json Successfully displayed`


## Wallet User List
The Wallet User List API is a feature in decentralized identity systems that allows users to retrieve a list of their identities or DIDs (decentralized identifiers) from their digital wallets. This API enables users to manage their digital identities across different applications and services from a single location, providing greater convenience and control over their personal data. By using this API, developers can create applications that support decentralized identities and enable users to seamlessly switch between identities without the need for multiple logins or authentication processes.


```http
POST /api/v1/wallet/users HTTP/1.1
```

```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/wallet/users'
```

```json
{
  "domainId": 1
}
```

### Access Token
Authorization Key Required 


### HTTP Request
`POST /api/v1/wallet/users HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | ----------- 
domainId |This refers to the company or organization who is using the service.



```json
{
  "Code": 200,
  "Message": "Successfully retrieved waller users",
  "Status": "Success",
  "users": [
      {
          "userId": 100,
          "walletUrl": "link",
          "noOfCredentials": 10
      }
  ]
}
```

### HTTP Response
`Successfully Listed wallet user`


## Create EPM User Verifiable Credential
The Create EPM User Verifiable Credential API is a feature in decentralized identity systems that allows users to create and issue verifiable credentials for themselves or for others. Verifiable credentials are digital documents that contain information about a person, organization, or thing that can be verified by third-party services. This API enables users to generate and manage their own credentials, providing greater control over their personal data and privacy. By using this API, developers can create applications that support verifiable credentials and enable users to securely share their credentials with others, without revealing their personal information.


```http
POST /api/v1/credentials/createEpmUserCredential HTTP/1.1
```

```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/credentials/createEpmUserCredential
```

```json
{
  "epmUserId": 1,
  "epmUsername": "john",
  "credentialType": "password",
  "credentialValue": "abcxyz",
  "privilegedUser": true,
  "userType": "local",
  "listOfEndpoints": [1, 2, 3],
  "listOfGroups": [1, 2, 3],
  "listOfWallets": [1, 2, 3]
}
```

### Access Token
Authorization Key Required 


### HTTP Request
`POST /api/v1/credentials/createEpmUserCredential HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | ----------- 
epmUserId | The epmUserId represents the unique identifier of a user within a particular DID method or network.
epmUsername | The epmUsername represents the human-readable identifier of a user within a particular DID method or network.
credentialType | The credentialType specifies the type or category of a credential being issued or requested
credentialValue | The credentialValue represents the value or content of a specific credential issued to an identity.
privilegedUser | The privilegedUser refers to a user or entity that has elevated permissions or access rights to perform certain actions within the identity system.
userType | The userType is used to classify the type or category of a user or identity within a particular context or community.
listOfEndpoints | The listOfEndpoints refers to a list of endpoints or URLs that can be used to access and interact with various services or resources associated with an identity or identity system.
listOfGroups | The listOfGroups represents a collection of groups or communities within which an identity is a member or has access to specific resources or permissions.
listOfWallets | The listOfWallets refers to a collection of wallets or digital storage containers where an identity can store and manage their cryptographic keys and other sensitive information.



```json
{
  "code": 201,
  "status": "success",
  "message": "Queued"
}
```

### HTTP Response
`Successfully created EPM User Verifiable Credential`


## User List
The User List API is a feature in decentralized identity systems that allows developers to retrieve a list of users or decentralized identifiers (DIDs) from a given network or service. This API enables developers to build applications that support decentralized identities and enable users to manage their personal data across different services and applications. By using this API, developers can provide users with greater control over their digital identities, making it easier for them to manage and switch between different identities without the need for multiple logins or authentication processes.

```http
POST /api/v1/did/userList HTTP/1.1
```

```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/did/userList'  \
--header 'Content-Type: application/json' \
--data '{
  "domainId": 1
}'
```

```json
{
  "domainId": 1
}
```

### Access Token
Authorization Key Required 


### HTTP Request
`POST /api/v1/credential/assignVC HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | ----------- 
domainId |This refers to the company or organization who is using the service.



```json
[
    {
        "Name": "aza@gmail.com",
        "userId": 85
    },
    {
        "Name": "inam",
        "userId": 95
    },
    {
        "Name": "postgresUser",
        "userId": 107
    },
    {
        "Name": "Hema",
        "userId": 112
    },
    {
        "Name": "postgresUser1",
        "userId": 116
    }
  ]
```

### HTTP Response
`Successfully User Listed`

## Issuer List
The Issuer List API is a feature in decentralized identity systems that allows developers to retrieve a list of trusted issuers from a given network or service. An issuer is an organization or entity that issues verifiable credentials to users. This API enables developers to build applications that support decentralized identities and enable users to verify the authenticity of the credentials they receive. By using this API, developers can ensure that only trusted issuers are allowed to issue verifiable credentials within their applications, thereby enhancing the security and reliability of their services.


```http
POST /api/v1/did/issuerList HTTP/1.1
```

```shell
curl --location --request POST 'https://api.did.kloudlearn.com/api/v1/did/issuerList'  \
--header 'Content-Type: application/json' \
--data '{
    "domainId":1
}'
```

```json
{
    "domainId":1
}
```

### Access Token
Authorization Key Required 

### HTTP Request
`POST /api/v1/did/issuerList HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | ----------- 
domainId |This refers to the company or organization who is using the service.



```json
[
    {
        "Name": "Bijay",
        "IssuerId": 2
    },
    {
        "Name": "Hema",
        "IssuerId": 23
    },
    {
        "Name": "Durai",
        "IssuerId": 24
    },
    {
        "Name": "Hussain",
        "IssuerId": 25
    },
    {
        "Name": "Bijay",
        "IssuerId": 27
    },
    {
        "Name": "Bijay",
        "IssuerId": 28
    }
]
```

### HTTP Response
`Successfully listed Issuer List`

## Get Credential
The Get Credential API is a feature in decentralized identity systems that allows developers to retrieve verifiable credentials issued to a specific user or decentralized identifier (DID). Verifiable credentials are digital documents that contain information about a person, organization, or thing that can be verified by third-party services. This API enables developers to build applications that support decentralized identities and enable users to manage and share their verifiable credentials across different services and applications. By using this API, developers can ensure that only authorized users are able to access and share their verifiable credentials, thereby enhancing the security and privacy of their services.


```http
POST /api/v1/credential/GetCredential HTTP/1.1
```

```shell
curl --location 'https://api.did.kloudlearn.com/api/v1/credential/GetCredential'  \
--header 'Content-Type: application/json' \
--data '{
   "credentialId": "430d2578-4382-4e74-a8b6-af7c1a960100"
 }'
```

```json
{
   "credentialId": "430d2578-4382-4e74-a8b6-af7c1a960100"
 }
```

### Access Token
Authorization Key Required 


### HTTP Request
`POST /api/v1/credential/GetCredential HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | ----------- 
credentialId |The credentialId specifies the unique identifier associated with a verifiable credential, allowing for easy retrieval and management of verifiable credentials within a decentralized identity ecosystem.



```json
{
    "id": "430d2578-4382-4e74-a8b6-af7c1a960100",
    "credential": {
      "@context": [
        "https://www.w3.org/2018/credentials/v1"
      ],
      "id": "430d2578-4382-4e74-a8b6-af7c1a960100",
      "type": [
        "VerifiableCredential"
      ],
      "issuer": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
      "issuanceDate": "2023-02-16T12:02:53Z",
      "expirationDate": "2051-10-05T14:48:00.000Z",
      "credentialSubject": {
        "id": "did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "password": "XXXXXXXX"
      },
      "credentialSchema": {
        "id": "a36d9717-65a1-4b6b-bd80-0bbffd7d82d3",
        "type": "JsonSchemaValidator2018"
      }
    }
  }
```

### HTTP Response
`Successfully Credential displayed`

## Assign Wallet User
The Wallet User API in Decentralized Identities (DIDs) is an interface that allows users to manage their decentralized identity credentials, such as public keys and attestations, through a digital wallet. It enables users to securely store and manage their identity information while maintaining full control over their data. With the Wallet User API, users can easily authenticate and authorize themselves for various digital services and applications without relying on traditional centralized identity providers.


```http
POST /api/v1/walletService/assignWalletUser HTTP/1.1
```

```shell
curl --location 'https://api.did.kloudlearn.com/api/v1/walletService/assignWalletUser'  \
--header 'Content-Type: application/json' \
--data '{
  "walletId": 1,
  "userId": 104,
  "credentialId": 10
}'
```

```json
{
  "walletId": 1,
  "userId": 104,
  "credentialId": 10
}
```

### Access Token
Authorization Key Required 


### HTTP Request
`POST /api/v1/walletService/assignWalletUser HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | ----------- 
walletId |The walletId parameter in the API of Decentralized Identities refers to the unique identifier of a digital wallet that holds a users decentralized identities, verifiable credentials, and other related data.
userId |  The userId specifies the unique identifier associated with a user, enabling secure authentication and authorization of data exchange and access within a decentralized identity ecosystem.
credentialId | The credentialId specifies the unique identifier associated with a verifiable credential, allowing for easy retrieval and management of verifiable credentials within a decentralized identity ecosystem.



```json
{
  "code": 200,
  "message": "Successfully Assigned Wallet",
  "status": "Success"
}
```

### HTTP Response
`Successfully Assigned Wallet`


## Validate User
The Validate User API in Decentralized Identities (DIDs) is an interface that allows service providers to verify the authenticity and validity of a users decentralized identity credentials. By using the Validate User API, service providers can ensure that the users credentials are trustworthy and have not been tampered with. The API can be used to verify digital signatures, attestations, and other types of proof that are associated with a users decentralized identity. This helps to create a more secure and trustworthy digital environment where users can confidently access services and applications without compromising their personal data.


```http
POST /api/v1/verifierService/validateUser HTTP/1.1
```

```shell
curl --location 'https://api.did.kloudlearn.com/api/v1/verifierService/validateUser' \
--header 'Content-Type: application/json' \
--data '{
  "username" :"Durai",
  "issuerDid" :"did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
  "holderDid":"did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
  "walletUrl":"wallet.brcm.connect.com",
  "endpoint":"database-server",
  "group":"lsfjobs"
}'
```

```json
{
  "username" :"Durai",
  "issuerDid" :"did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
  "holderDid":"did:key:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
  "walletUrl":"wallet.brcm.connect.com",
  "endpoint":"database-server",
  "group":"lsfjobs"
}
```

### Access Token
Authorization Key Required 


### HTTP Request
`POST /api/v1/verifierService/validateUser HTTP/1.1`

### Query Parameters
Parameter | Description
--------- | ----------- 
username | The username is an optional field used to associate a user-friendly identifier with a decentralized identity, making it easier for users to manage their digital identities.
issuerDid | The issuerDid is a required field used to identify the decentralized identity issuer and verify the authenticity of the credentials associated with the identity.
holderDid | The holderDid is a required field used to identify the holder of the decentralized identity credentials being used for authentication or authorization purposes.
walletUrl | Url of the wallet
endpoint | The endpoint is a required field used to specify the network endpoint for communicating with the decentralized identity infrastructure.
group | The group is used to specify the context or community within which an identity is being created or accessed.



```json
{
    "message": "True"
}
```

### HTTP Response
`User Validated`
